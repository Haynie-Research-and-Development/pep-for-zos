***********************************************************************
* CATEGORY.: ROCKET CALCULATIONS
* GROUP....: FORTRAN PROGRAMS
* AUTHOR...: LANCE HAYNIE <LANCE@HAYNIEMAIL.COM>
* DATE.....: 2017-09-14
* PURPOSE..: PROPELLANT EVALUATION PROGRAM
************************************************************************
* NOTES
* UPDATED FOR Z/OS FROM ORIGINAL VERSION OF NEWPEP PROVIDED BY NSWC
* PREVIOUS VERSION UPDATED BY MARTIN MARIETTA, ORLANDO ON 5/89
* ORIGINAL COMPILER IBM PROFESSIONAL FORTRAN VERSION 1.0 (1984)
* UPDATED COMPILER VS FORTRAN VERSION 2 RELEASE 6
* HAYNIE RESEARCH AND DEVELOPMENT NOR ANY OF ITS EMPLOYEES WARRANT OR
* SUPPORT THIS PROGRAM IN ANY WAY
************************************************************************
* MODIFICATIONS
* 2017-09-14 - LHAYNIE - INITIAL VERSION
* 2017-09-15 - LHAYNIE - FIXED REPORT LAYOUT FOR PRINTING
************************************************************************
*PROPELLANT EVALUATION PROGRAM FOR Z/OS
*COPYRIGHT (C) 2017  HAYNIE RESEARCH & DEVELOPMENT
*
*THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
*IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
*THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
*(AT YOUR OPTION) ANY LATER VERSION.
*
*THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL,
*BUT WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
*MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  SEE THE
*GNU GENERAL PUBLIC LICENSE FOR MORE DETAILS.
*
*YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE ALONG
*WITH THIS PROGRAM; IF NOT, WRITE TO THE FREE SOFTWARE FOUNDATION, INC.,
*51 FRANKLIN STREET, FIFTH FLOOR, BOSTON, MA 02110-1301 USA
*
      COMMON A(12,12), KR(20), AMAT(10,12), JAT(12), IN, IS,
     1FIE(10,6), IE(10,6), ALP(12), W27, N, DH(10), RHO(10),
     2WATE(10), W1(6), W43, IG, NP, VNT(401), W47, NAME, SER
     3,FLOOR,ITAG(100),WING(10)
      COMMON/CHARA/BLOK,JE,ASPEC,SPECIE
      CHARACTER*30 BLOK(10),PROFL1,PROFL2
      CHARACTER*2 JE(10,6), ASPEC(12)
      CHARACTER*8 SPECIE(400)
      COMMON /IBRIUM/ TL(400,2), TU(400,2), W3(400), VNU(400,12), QA,
     1TAU, H(400), SD(400), Y(400), JC, IR(400,2), DMU(400), VLNK(400),
     2IOJ(12), RA(400,2), RB(400,2), RC(400,2), RD(400,2), RE(400,2),
     3RF(400,2), CH(400,2), JM, W48, CP, FN, C(12,400), LL(400)
      COMMON/MOON/TSTEST,TE,IRUN,IOUNIT,IEND
      COMMON /FJB/ IO6
      COMMON /FI/ SYS,PEPFIL,JANFIL,OUTFIL
      CHARACTER*2 SYS,JUNK
      CHARACTER*40 PEPFIL,JANFIL,OUTFIL,JUNKFIL
C  OPEN DATA INPUT FILES
      OPEN (10,FILE='SETUP')
      READ (10,1001) SYS
      READ (10,1002) PEPFIL
      READ (10,1002) JUNKFIL
      READ (10,1002) JANFIL
      READ (10,1002) OUTFIL
1001  FORMAT (A2)
1002  FORMAT (A40)
      CALL OPENFL
      IRUN = 0
      TCH = 3000.
    8 TE= AMAX1(TCH, 500.0)
      TSTEST = 0.
      TE = AMIN1(TE,6000.)
      CALL PUT IN (LE)
C  THE NEXT STATEMENT DELETES CALCULATION WHEN INPUT ERRORS ARE FOUND.
      IF (LE .EQ. 1)  GOTO 9999
      PR = W1(5)
      IF (KR(19) .EQ. 1)  GO TO 15
      CALL GUESS (TE,PR)
   15 IF (KR(7) .EQ. 0)  GO TO 14
      TE = W1(6)
      VNT(NP) = ALOG(.08205*W1(6)/W1(5))
      CALL EQUIL (TE, PR, HE, SE, 1)
      PR = FN*VNT(NP)
      SYSENT = SE
      GO TO 114
   14 CALL H BAL (TE, PR, SYSENT, 1)
      TCH = TE
      HE = W1(4)
      CHN = FN
  114 CALL OUT (PR,TE,HE,SYSENT,1)
      IF (KR(1) .EQ. 1)  GO TO 9998
      IF (W1(5) .GE. W1(6))  GO TO  125
      WRITE ( 6,3)
    3 FORMAT (/' WHY IS THE EXIT PRESSURE .GE. THE CHAMBER PRESSURE.')
      GO TO 8
  125 CALL DESIGN (TE, PR, HE, SYSENT, 0, 1)
      PR = W1(6)
      CALL S BAL (TE, PR, HE, SYSENT, TCH, 0)
      IF (KR(11) .EQ. 0) GO TO 999
      WRITE(6,998)W27,(KR(I),I=1,20)
  998 FORMAT(G14.4,20I2)
      CALL OUT (PR,TE,HE,SYSENT,2)
  999 CALL DESIGN (TE, PR, HE, SYSENT, 0, 2)
      TE = .5*(TCH+TE)
      CALL S BAL (TE, PR, HE, SYSENT, TCH, 1)
      CALL OUT (PR,TE,HE,SYSENT,2)
      FLOOR=W27*1.E-7
      CALL DESIGN (TE, PR, HE, SYSENT, 1, 2)
      IF (KR(3) .EQ. 0)  CALL DESNOZ
 9998 IF(IEND.EQ.0)GOTO 9999
      GO TO 8
 9999 CONTINUE
      STOP
      END
      BLOCK DATA
      COMMON /LLIST/ ATWT(100)
      DATA ATWT / 1.008, 4.003, 6.94, 9.013, 10.82, 12.011,
     1 14.008, 16., 19., 20.183, 22.991, 24.32, 26.98, 28.09, 30.975,
     2 32.066,35.457, 39.944, 39.1, 40.08, 44.96, 47.9, 50.95, 52.01,
     4 54.94, 55.85, 58.94, 58.71, 63.54, 65.38, 69.72, 72.6, 74.92,
     5 78.96,79.916, 83.80, 85.48, 87.63, 88.91, 91.22, 92.91, 95.95,
     6 99.,101.1, 102.91, 106.4, 107.88, 112.41, 114.82, 118.7, 121.76,
     7 127.61, 126.91, 131.3, 132.91, 137.36, 138.92, 140.13, 140.91,
     8 144.27,147., 150.35, 152., 157.26, 158.93, 162.51,164.94,167.27,
     9 168.94,173.04, 174.99, 178.50, 180.95, 183.86, 186.22, 190.2,
     1 192.2,195.09, 197., 220.61, 204.39, 207.21, 208.99, 210., 210.,
     2 222.,2.014,226.,92.906,232.,231.,238.,237.,237.,12.011,9.013,
     3 10.82,24.32,26.98, 253.  /
      END
      SUBROUTINE ADJUST
COMMENT.   ADJUSTS GRAM ATOM BALANCE ERRORS BY MODIFYING THE BASIS.
CALLED BY DEFIOJ
      COMMON A(12,12), KR(20), AMAT(10,12), JAT(12), IN, IS,
     1FIE(10,6), IE(10,6), ALP(12), W27, N, DH(10), RHO(10),
     2WATE(10), W1(6), W43, IG, NP, VNT(401), W47, NAME, SER
     3,FLOOR,ITAG(100),WING(10)
      COMMON/CHARA/BLOK,JE,ASPEC,SPECIE
      CHARACTER*30 BLOK(10)
      CHARACTER*2 JE(10,6), ASPEC(12)
      CHARACTER*8 SPECIE(400)
      COMMON /IBRIUM/ TL(400,2), TU(400,2), W3(400), VNU(400,12), QA,
     1TAU, H(400), SD(400), Y(400), JC, IR(400,2), DMU(400), VLNK(400),
     2IOJ(12), RA(400,2), RB(400,2), RC(400,2), RD(400,2), RE(400,2),
     3RF(400,2), CH(400,2), JM, W48, CP, FN, C(12,400), LL(400)
      COMMON /FJB/ IO6
      DIMENSION EP(12), X(12)
      DO 1  I = 1,IS
      EP(I) = ALP(I)
      DO 1  J = 1,N
    1 EP(I) = EP(I) - C(I,J)*VNT(J)
      DO 2  K = 1,IS
      X(K) = 0.
      DO 2  I = 1,IS
    2 X(K) = X(K) + A(I,K)*EP(I)
      DO 3  K = 1,IS
      J = IOJ(K)
    3 VNT(J) = VNT(J) + X(K)
   77 FORMAT (1P 12E10.2)
      IF (KR(16) .EQ. 0)  GO TO 99
      WRITE (IO6,77) (ALP(J), J = 1,IS)
      WRITE (IO6,77) ( EP(J), J = 1,IS)
      WRITE (IO6,77) (X(J) , J = 1,IS)
   99 RETURN
      END
      SUBROUTINE BOOST(W43,SSI)
COMMENT.   COMPUTES DRAG FREE BOOST VELOCITIES FROM IMPULSE AND DENSITY.
C    IF NOT DESIRED, DELETE THE CALL IN SUBROUTINE DESIGN.
      DIMENSION W42(20), W44(20)
      COMMON /FJB/ IO6
      DATA JM/18 /
      DATA W42 / 5.,10.,15.,25.,30.,55.,60.,69.,71.,88.,
     1  100.,150.,175.,200.,300.,1000.,3000.,5000.,5000.,5000. /
227   FORMAT(/6(F5.0,'/',F6.0)/6(F5.0,'/',F6.0)/6(F6.0,'/',F5.0))
  230 FORMAT(//'BOOST VELOCITIES FOR PROPELLANT DENSITY OF ',F8.5,
     1'  (S.G. OF ',F8.3, ')')
      W48 = 1728.*W43
      VQ = W43/.036128
      VI = SSI*32.174
      DO 127 J = 1, JM
  127 W44(J) = VI*ALOG(1.0+ W48/ W42(J))
      WRITE (IO6,230) W43, VQ
      WRITE (IO6,227)(W42(J), W44(J), J=1,JM)
      RETURN
      END
      SUBROUTINE DEFIOJ
C     COMPUTES SERIAL NUMBER FOR AN OPTIMUM BASIS A LA HN BROWNE JR.
      COMMON A(12,12), KR(20), AMAT(10,12), JAT(12), IN, IS,
     1FIE(10,6), IE(10,6), ALP(12), W27, N, DH(10), RHO(10),
     2WATE(10), W1(6), W43, IG, NP, VNT(401), W47, NAME, SER
     3,FLOOR,ITAG(100),WING(10)
      COMMON/CHARA/BLOK,JE,ASPEC,SPECIE
      CHARACTER*30 BLOK(10)
      CHARACTER*2 JE(10,6), ASPEC(12)
      CHARACTER*8 SPECIE(400)
      COMMON /IBRIUM/ TL(400,2), TU(400,2), W3(400), VNU(400,12), QA,
     1TAU, H(400), SD(400), Y(400), JC, IR(400,2), DMU(400), VLNK(400),
     2IOJ(12), RA(400,2), RB(400,2), RC(400,2), RD(400,2), RE(400,2),
     3RF(400,2), CH(400,2), JM, W48, CP, FN, C(12,400), LL(400)
      COMMON /FJB/ IO6
      CALL SLITET(1,K000FX)
       GO TO(7,11),K000FX
    7 CALL SLITE (1)
      CALL RANK(IR,W3,N)
      DO 1  I = 1,N
    1 LL(I) = 9
      IF = 0
      DO 6  I = 1,IS
    3 IF = IF + 1
      IF (IF-N)  9,9,8
    8 WRITE (IO6,10)
   10 FORMAT (17H0CANT FIND BASIS  )
      STOP
    9 DO 4  J = 1,IS
      K = IR(IF,1)
    4 A(J,I) = C(J,K)
      CALL LINDEP(I)
      CALL SLITET(2,K000FX)
      GO TO (66,3), K000FX
   66 LL(K) = 0
    6 IOJ(I) = K
      CALL ADJUST
   11 RETURN
      END

      SUBROUTINE EQUIL(TE,PR,HE,ENTR,IX)
      COMMON A(12,12), KR(20), AMAT(10,12), JAT(12), IN, IS,
     1FIE(10,6), IE(10,6), ALP(12), W27, N, DH(10), RHO(10),
     2WATE(10), W1(6), W43, IG, NP, VNT(401), W47, NAME, SER
     3,FLOOR,ITAG(100),WING(10)
      COMMON/CHARA/BLOK,JE,ASPEC,SPECIE
      COMMON /FJB/ IO6
      CHARACTER*30 BLOK(10)
      CHARACTER*2 JE(10,6), ASPEC(12)
C.   THIS ROUTINE COMPUTES CHEMICAL EQUILIBRIUM FOR A PRESSURE,
C   TEMPERATURE POINT.   OTHER OUTPUTS ARE ENTHALPY AND ENTROPY.   HEAT
C    (CP) AND MOLES OF GAS ARE AVAILABLE THRU COMMON.
C   THIS ROUTINE IS CALLED BY PEP, HBAL, SBAL, AND TSBAL.
C    UNITS ARE TE (DEG. K.) PR (ATM.) HE (CAL/SYS WT.) ENTR (CAL/D
C     /SYS. WT.)           SYSTEM WEIGHT IS W27 IN COMMON.
C.   IX IS 0 FOR FROZEN EVALUATION OF THERMODYNAMIC VARIABLES.
C     IX IS 1 FOR EQULIBRIUM EVALUATIONS (IX = 2 FOR KINETIC IN SOME VER
C.  IN ADDITION TO PRESSURE TEMPERATURE POINTS THIS ROUTINE MAY BE
C    FREELY FOR VOLUME TEMPERATURE POINTS BY USING THE FOLLOWING MODIFIE
C    CALL SEQUENCE. VNT(NP)=ALOG(.08205*TE/V))   KR(17) = 1     CALL EQU
C    (TE, PR, HE, ENTR, IX)         KR(17) = 0      PR=FN*VNT(NP)
C   V IS THE SYSTEM VOLUME IN LITERS/SYS. WT.
      CHARACTER*8 SPECIE(400)
      COMMON /IBRIUM/ TL(400,2), TU(400,2), W3(400), VNU(400,12), QA,
     1TAU, H(400), SD(400), Y(400), JC, IR(400,2), DMU(400), VLNK(400),
     2IOJ(12), RA(400,2), RB(400,2), RC(400,2), RD(400,2), RE(400,2),
     3RF(400,2), CH(400,2), JM, W48, CP, FN, C(12,400), LL(400)
      COMMON/MOON/TSTEST,TEEE,IJUNK(3)
      DIMENSION X(12), XM(12)
    8 FORMAT (I5,F10.0, F12.3)
    9 FORMAT (1P 10E13.4)
 1734 CALL GIBBS(TE)
      CALL FIXBAS
 1735 IF (IX - 1)  21,12,12
   12 DO 38  J = 1,IS
      X(J) = 0.
      XM(J) = 0.
      DO 31  I = 1,N
      IF (C(J,I) .EQ. 0.)  GO TO 31
      XM(J) = AMAX1(VNT(I), XM(J))
      X(J) = X(J) + C(J,I)*VNT(I)
   31 CONTINUE
      IF (ABS(ALP(J) - X(J))/XM(J) .LT. .00001)  GO TO 38
      CALL SLITE(1)
      GO TO 39
   38 CONTINUE
   39 CALL DEFIOJ
      CALL REACT (TE)
      DO 211  I = 1,N
  211 W3(I) = 50.0 -VLNK(I)
      CALL RANK(IR,W3,N)
   11 DO 22  JC = 1,20
      CALL TWITCH(PR,0)
      CALL SLITET(4,K000FX)
       GO TO(146,17),K000FX
  146 IF (KR(13)-1)  15,14,15
   14 WRITE (IO6,8)JC,TE,PR
      WRITE (IO6,9)(VNT(I), I = 1,N)
   15 DO 23  ICC = 1,3
   25 CALL TWITCH(PR,1)
      CALL SLITET(4,K000FX)
       GO TO(23,22),K000FX
   23 CONTINUE
   22 CONTINUE
      CALL SLITE (3)
   21 FNN=AMAX1(FN,FLOOR)
      VNT(NP) = ALOG(PR/FNN)
   17 CALL THERMO (TE, HE, ENTR)
      VNT(NP) = EXP(VNT(NP))
      TET = TE
      RETURN
      END
      SUBROUTINE FIXBAS
      COMMON A(12,12), KR(20), AMAT(10,12), JAT(12), IN, IS,
     1FIE(10,6), IE(10,6), ALP(12), W27, N, DH(10), RHO(10),
     2WATE(10), W1(6), W43, IG, NP, VNT(401), W47, NAME, SER
     3,FLOOR,ITAG(100),WING(10)
      COMMON/CHARA/BLOK,JE,ASPEC,SPECIE
      CHARACTER*30 BLOK(10)
      CHARACTER*2 JE(10,6), ASPEC(12)
      CHARACTER*8 SPECIE(400)
      COMMON /IBRIUM/ TL(400,2), TU(400,2), W3(400), VNU(400,12), QA,
     1TAU, H(400), SD(400), Y(400), JC, IR(400,2), DMU(400), VLNK(400),
     2IOJ(12), RA(400,2), RB(400,2), RC(400,2), RD(400,2), RE(400,2),
     3RF(400,2), CH(400,2), JM, W48, CP, FN, C(12,400), LL(400)
      IF (IG .EQ. N)  GO TO 99
      IGP = IG+1
      DO 9  J = 1,IS
      II = IOJ(J)
      IF (DMU(II) .LT. .9E+12)  GO TO 9
      DO 8  I = IGP,N
      IQ = 99
      IF (VNU(I,J) .EQ. 0.)  GO TO 8
      IQ = 88
      IF (DMU(I) .GE. .9E+12)  GO TO 8
      DO 7  K = 1,IS
      IF (K .EQ. J)  GO TO 7
      IQ = K
      IF (VNU(I,K) .NE. 0.)  GO TO 8
    7 CONTINUE
      VA = VNT(II)
      VNT(II) = VNT(I)
      VNT(I) = VA
      IOJ(J) = I
      LL(I) = 0
      LL(II) = 9
      GO TO 9
    8 CONTINUE
    9 CONTINUE
   99 RETURN
      END
      SUBROUTINE GUESS(TE,PR)
COMMENT.  THIS ROUTINE COMES UP WITH A CRUDE COMPOSITION GUESS BUT IT S
C   TO GET CALCUATIONS OFF TO A FASTER START.
      COMMON A(12,12), KR(20), AMAT(10,12), JAT(12), IN, IS,
     1FIE(10,6), IE(10,6), ALP(12), W27, N, DH(10), RHO(10),
     2WATE(10), W1(6), W43, IG, NP, VNT(401), W47, NAME, SER
     3,FLOOR,ITAG(100),WING(10)
      COMMON/CHARA/BLOK,JE,ASPEC,SPECIE
      CHARACTER*30 BLOK(10)
      CHARACTER*2 JE(10,6), ASPEC(12)
      CHARACTER*8 SPECIE(400)
      COMMON /IBRIUM/ TL(400,2), TU(400,2), W3(400), VNU(400,12), QA,
     1TAU, H(400), SD(400), Y(400), JC, IR(400,2), DMU(400), VLNK(400),
     2IOJ(12), RA(400,2), RB(400,2), RC(400,2), RD(400,2), RE(400,2),
     3RF(400,2), CH(400,2), JM, W48, CP, FN, C(12,400), LL(400)
      FLOOR=W27/10.**(8+KR(5))
      DO 89  J = 1,N
      VA = 0.0
      DO 88  I = 1,IS
   88 VA = VA + SQRT(ABS(C(I,J)))
   89 W3(J) = 10.0-VA
      CALL SLITE (1)
      CALL GIBBS (TE)
      DO 14  I = 1,N
   14 VNT(I) = 0.0
      CALL DEFIOJ
  771 CALL REACT(TE)
      DO 1  I = 1,N
    1 VLNK(I) = -VLNK(I)
      CALL RANK(IR,VLNK,N)
      DO 3  I = 1,N
      J = IR(I,1)
      IF (LL(J) .LE. 0)  GO TO 3
      IF (DMU(J) .GE. .9E+12)  GO TO 3
      CALL SETUP(Y,XMIN,XMAX,J)
      XMIN = .50*XMAX
      VNT(J) = XMIN + VNT(J)
      DO 4  L = 1,IS
      K = IOJ(L)
      IF (K .EQ. 0)  GO TO 4
      VNT(K) = VNT(K) - VNU(J,L)*XMIN
    4 CONTINUE
    3 CONTINUE
      CALL SLITE (0)
      CALL SLITE (1)
      DO 7  I = 1,N
    7 W3(I) = VNT(I)
      RETURN
      END
      SUBROUTINE H BAL (TE,PR, ENTR, LL)
COMMENT.   THIS ROUTINE COMPUTES A PRESSURE ENTHALPY POINT.
C  INPUT ENTHALPY IS W1(4) IN COMMON. IX WORKS THE SAME AS FOR EQUIL (WH
C    A VOLUME INPUT INSTEAD OF PRESSUR WORKS THE SAME WAY AS FOR EQUIL A
      COMMON A(12,12), KR(20), AMAT(10,12), JAT(12), IN, IS,
     1FIE(10,6), IE(10,6), ALP(12), W27, N, DH(10), RHO(10),
     2WATE(10), W1(6), W43, IG, NP, VNT(401), W47, NAME, SER
     3,FLOOR,ITAG(100),WING(10)
      COMMON/CHARA/BLOK,JE,ASPEC,SPECIE
      CHARACTER*30 BLOK(10)
      CHARACTER*2 JE(10,6), ASPEC(12)
      CHARACTER*8 SPECIE(400)
      COMMON /IBRIUM/ TL(400,2), TU(400,2), W3(400), VNU(400,12), QA,
     1TAU, H(400), SD(400), Y(400), JC, IR(400,2), DMU(400), VLNK(400),
     2IOJ(12), RA(400,2), RB(400,2), RC(400,2), RD(400,2), RE(400,2),
     3RF(400,2), CH(400,2), JM, W48, CP, FN, C(12,400),JUNK(400)
      COMMON/SCRATC /HN(400,2),RJ(200)
      COMMON /OPT/Y1(10),NI,XISP,XRHO,XISPEX,IFLGEX,EXPAN,PRESEX
      COMMON /FJB/ IO6
  236 FORMAT (' *****NO TEMPERATURE CONVERGENCE-DONT TRUST RESULTS!')
      FTU = 6000.0
      FTL=75.
      CALL EQUIL (TE,PR,HE,ENTR,LL)
      LIM = 20
      DO 11  I = 1,LIM
      CALL SLITET(3,K000FX)
       GO TO(111,200),K000FX
  200 IF (HE - W1(4))  201,14,202
  201 FTL = TE
      FLP = VNT(NP)
      HLP = HE
      DO 70  L = 1,N
   70 HN(L,1) = VNT(L)
      GO TO 111
  202 FTU = TE
      FUP = VNT(NP)
      HUP = HE
      DO 71  L = 1,N
   71 HN(L,2) = VNT(L)
  111 K = I
      CF= AMAX1(1.0,CF)
      CF = AMIN1(16.0, CF)
      DT = (W1(4) - HE)/(CF*CP)
      DT= AMIN1(DT, .5*(FTU-TE))
      DT= AMAX1(DT, .5*(FTL-TE))
      TE = TE + DT
      HOLD = HE
      IF (FTU-FTL .LT. 2.)  GO TO 21
      IF (ABS(DT) .LT. .1)  GO TO 14
      CALL EQUIL (TE,PR,HE,ENTR,LL)
   11 CF = (HE - HOLD)/(CP*DT)
      WRITE (IO6,236)
      IF (NI.NE.0)WRITE (3,236)
   21 VA = (HUP-W1(4))/(HUP-HLP)
      VB = (W1(4)-HLP)/(HUP-HLP)
      CP = 0.
      DO 22  L = 1,N
      CP = CP + VNT(L)*Y(L)
      IF (LL .NE. 1)  GO TO 14
   22 VNT(L) = VA*HN(L,1) + VB*HN(L,2)
   14 ENTR = ENTR + (W1(4) - HE)/TE
      RETURN
      END
      FUNCTION IPHASE(L)
COMMENT    THIS ROUTINE DETERMINES WHAT CONDENSED PHASES ARE PRESENT.
      COMMON A(12,12), KR(20), AMAT(10,12), JAT(12), IN, IS,
     1FIE(10,6), IE(10,6), ALP(12), W27, N, DH(10), RHO(10),
     2WATE(10), W1(6), W43, IG, NP, VNT(401), W47, NAME, SER
     3,FLOOR,ITAG(100),WING(10)
      COMMON/CHARA/BLOK,JE,ASPEC,SPECIE
      CHARACTER*8 SPECIE(400)
      CHARACTER*30 BLOK(10)
      CHARACTER*2 JE(10,6), ASPEC(12)
      IPHASE = 0
      IF (IG .EQ. N)  GO TO 99
      INC = 1
      IGP = IG+1
      DO 12  I = IGP,N
      IF (VNT(I) .LE. FLOOR)  GO TO 12
      IPHASE = IPHASE + INC
C  12 INC = INC + INC
   12 INC = INC + 1
   99 RETURN
      END
      SUBROUTINE LINDEP (I)
COMMENT. THIS ROUTINE ESTABLISHES LINEAR DEPENDENCE BY THE GRAM SCHMIDT-
C   TION AND THEN INVERTS THE A MATRIX BY THE METHOD OF CONJUGATE GRADIE
      COMMON A(12,12), KR(20), AMAT(10,12), JAT(12), IN, IS,
     1FIE(10,6), IE(10,6), ALP(12), W27, N, DH(10), RHO(10),
     2WATE(10), W1(6), W43, IG, NP, VNT(401), W47, NAME, SER
     3,FLOOR,ITAG(100),WING(10)
      COMMON/CHARA/BLOK,JE,ASPEC,SPECIE
      CHARACTER*8 SPECIE(400)
      CHARACTER*30 BLOK(10)
      CHARACTER*2 JE(10,6), ASPEC(12)
      DIMENSION SS(12), D(12,12)
      D(I,I) = 1.
      IF (I .GT. IS)  GO TO 887
      IF (I .EQ. 1)  GO TO 8
      IM = I -1
      DO 7  J = 1,IM
      D(J,I) = 0.
      R = 0.0
      DO 2  K = 1,IS
      IF (A(K,I) .EQ. 0.)  GO TO 2
      IF (A(K,J) .EQ. 0.)  GO TO 2
      R = R + A(K,J)*A(K,I)
    2 CONTINUE
      IF (R .EQ. 0.)  GO TO 7
      Q = R/SS(J)
      VA = 0.
      DO 3  K = 1,IS
      A(K,I) = A(K,I) - Q*A(K,J)
      IF (A(K,I) .EQ. 0.)  GO TO 3
      VA = VA + ABS(A(K,I))
    3 CONTINUE
      IF (VA .LT. .1)  GO TO 6
      DO 17  K = 1,J
   17 D(K,I) = D(K,I) - Q*D(K,J)
    7 CONTINUE
    8 SS(I) = 0.
      DO 4  J = 1,IS
    4 SS(I) = SS(I) + A(J,I)**2
      CALL SLITE (2)
      IF (I .LT. IS)  GO TO 6
  887 DO 13  J = 1,IS
      DO 13  K = 1,IS
      VA = 0.
      DO 12  L = J,IS
   12 VA = VA + D(J,L)*A(K,L)/SS(L)
   13 A(K,J) = VA
  871 FORMAT (7F18.6)
    6 RETURN
      END
      SUBROUTINE ONED (HSTAG,TZ,PZ,HZ,VZ,TO,PO,HO,VO,PS,AS,GT,GC,GV,LL
     .)
COMMENT.  CONTINUITY EQUATION FOR 1 DIMENSIONAL FLOW FOR ADIABATIC (19)
C    OR ISOTHERMAL (20) MODELS.
      COMMON A(12,12),KR(20),RJUNK(644),JUNK(178)
      COMMON /FJB/ IO6
      IF (KR(11) .NE. 0) WRITE (IO6,1122)PZ,PO
      IF (KR(11) .NE. 0) WRITE (IO6,1128) HZ,HO
 1128 FORMAT (' HX,HO',2E14.4)
      IF (KR(11) .NE. 0) WRITE (IO6,1124)TZ,TO
 1124 FORMAT(' TZ,TO',2E14.4)
      IF (KR(11) .NE. 0) WRITE (IO6,1123)VZ,VO
 1122 FORMAT (' PX,PO',2E14.4)
 1123 FORMAT(' VZ,VO',2E14.4)
      GT = ALOG(TO/TZ)/ALOG(PZ/PO)
      GV = ALOG(PO/PZ)/ALOG(VZ/VO)
      IF (KR(11) .NE. 0) WRITE (IO6,1125)GV,GT
 1125 FORMAT (' GV,GT',2E14.4)
      LL = 1
      IF (ABS(TZ-TO) .GT. 3.)  GO TO 19
      LL = 2
      GC = (HO-HZ)/ALOG(PO/PZ)
      IF (KR(11) .NE. 0) WRITE (IO6,1127) GC,HSTAG
 1127 FORMAT (' GC,HSTAG',2E14.4)
      PSTAR = PZ*EXP(-GV/2. + (HSTAG-HZ)/GC)
      HSTAR = HZ + GC*ALOG(PSTAR/PZ)
      IF (KR(11) .NE. 0) WRITE (IO6,1129)PSTAR,HSTAR
 1129 FORMAT (' PSTAR,HSTAR', 2E14.4)
      VSTAR = VZ*(PZ/PSTAR)**(1./GV)
      GO TO 20
   19 GC = (HO-HZ)/(PO*VO - PZ*VZ)
      PSTAG = PZ*(1. +(HSTAG - HZ)/GC/PZ/VZ)**(GV/(GV-1.))
      PSTAR = PSTAG*(2./(GV+1.))**(GV/(GV-1.))
      VSTAR = VZ*(PZ/PSTAR)**(1./GV)
      HSTAR = HZ + GC*(PSTAR*VSTAR - PZ*VZ)
   20 QUAD=AMAX1((HSTAG-HSTAR),1.0E-10)
C  20 AS = VSTAR/SQRT(HSTAG-HSTAR)
      AS = VSTAR/SQRT(QUAD)
      PS = PSTAR
      RETURN
      END
      SUBROUTINE RANK(IR,Y,N)
COMMENT.  RANKS VECTOR Y IN DESCENDING ORDER, RANKINGS APPEAR IN IR(I,1)
      DIMENSION X(400), Y(400), IR(400,2)
      DO 1  I = 1,N
      IR(I,2) = IR(I,1)
    1 X(I) = AMAX1(Y(I), .0)
      DO 4  I = 1,N
      S = -1.0
      DO 3  J = 1,N
      IF (S - X(J)) 2,3,3
    2 IR(I,1) = J
      S = X(J)
    3 CONTINUE
      J = IR(I,1)
    4 X(J) = -1.0
      RETURN
      END
      SUBROUTINE REACT(TE)
COMMENT. THIS ROUTINE COMPUTES THE STOICHIOMETRIC COEFFICIENTS AND LOG E
C   UM CONSTANTS FOR ALL REACTIONS IN TERMS OF THE CURRENT BASIS.
      COMMON A(12,12), KR(20), AMAT(10,12), JAT(12), IN, IS,
     1FIE(10,6), IE(10,6), ALP(12), W27, N, DH(10), RHO(10),
     2WATE(10), W1(6), W43, IG, NP, VNT(401), W47, NAME, SER
     3,FLOOR,ITAG(100),WING(10)
      COMMON/CHARA/BLOK,JE,ASPEC,SPECIE
      CHARACTER*30 BLOK(10)
      CHARACTER*2 JE(10,6), ASPEC(12)
      CHARACTER*8 SPECIE(400)
      COMMON /IBRIUM/ TL(400,2), TU(400,2), W3(400), VNU(400,12), QA,
     1TAU, H(400), SD(400), Y(400), JC, IR(400,2), DMU(400), VLNK(400),
     2IOJ(12), RA(400,2), RB(400,2), RC(400,2), RD(400,2), RE(400,2),
     3RF(400,2), CH(400,2), JM, W48, CP, FN, C(12,400), LL(400)
      COMMON /FJB/ IO6
      CALL SLITET(1,K000FX)
       GO TO(21,31),K000FX
   21 DO 11 K = 1,IS
      DO 11 J = 1,N
      VNU(J,K) = 0.0
      DO 1  I = 1,IS
    1 VNU(J,K) = VNU(J,K) + A(I,K)*C(I,J)
      IF (ABS(VNU(J,K)) - .0051)  10,10,11
   10 VNU(J,K) = 0.0
   11 CONTINUE
   31 VA = 1./1.9871/TE
      DO 3  I = 1,N
      VB = 0.0
      DO 2  LS = 1,IS
      IF (VNU(I,LS)) 17,2,17
   17 J = IOJ(LS)
      VB = VB + VNU(I,LS)*DMU(J)
    2 CONTINUE
      VLNK(I) = VA*(DMU(I) - VB)
    3 CONTINUE
      IF (KR(14) -1)  7,4,7
    4 WRITE (IO6,5)
      WRITE (IO6,6)(VLNK(I), I = 1,N)
      WRITE (IO6,8)(IOJ(I), I = 1,IS)
    8 FORMAT (10(5X,I7))
    5 FORMAT (22H0LOGS OF EQUIL CONST,S)
    6 FORMAT (' ',1PE11.4, 9E12.4)
    7 RETURN
      END
      SUBROUTINE S BAL (TE, PR, HE, SYSENT, TCH, LL)
      COMMON A(12,12), KR(20), AMAT(10,12), JAT(12), IN, IS,
     1FIE(10,6), IE(10,6), ALP(12), W27, N, DH(10), RHO(10),
     2WATE(10), W1(6), W43, IG, NP, VNT(401), W47, NAME, SER
     3,FLOOR,ITAG(100),WING(10)
      COMMON/CHARA/BLOK,JE,ASPEC,SPECIE
      CHARACTER*30 BLOK(10)
      CHARACTER*2 JE(10,6), ASPEC(12)
      CHARACTER*8 SPECIE(400)
      COMMON /IBRIUM/ TL(400,2), TU(400,2), W3(400), VNU(400,12), QA,
     1TAU, H(400), SD(400), Y(400), JC, IR(400,2), DMU(400), VLNK(400),
     2IOJ(12), RA(400,2), RB(400,2), RC(400,2), RD(400,2), RE(400,2),
     3RF(400,2), CH(400,2), JM, W48, CP, FN, C(12,400),JUNK(400)
      COMMON/SCRATC /HN(400,2),RJ(200)
      COMMON /OPT/Y1(10),NI,XISP,XRHO,XISPEX,IFLGEX,EXPAN,PRESEX
      COMMON /FJB/ IO6
  236 FORMAT (' *****NO TEMPERATURE CONVERGENCE-DONT TRUST RESULTS!')
      DIMENSION FAC(2)
      FTU = TCH
      FTL=75.
      LIM = 20
      CALL EQUIL(TE,PR,HE,ENTR,LL)
      CF = FAC(LL+1)
      DO 15  J = 1,LIM
      CALL SLITET(3,K000FX)
       GO TO(4115,210),K000FX
  210 IF (ENTR - SYSENT)  211,18,212
  211 FTL = TE
      FLP = VNT(NP)
      SLP = ENTR
      DO 70  L = 1,N
   70 HN(L,1) = VNT(L)
      GO TO 4115
  212 FTU = TE
      FUP = VNT(NP)
      SUP = ENTR
      DO 71  L = 1,N
   71 HN(L,2) = VNT(L)
 4115 CF= AMAX1(1.0,CF)
      CF = AMIN1(16.0, CF)
      VQ = (SYSENT - ENTR)/CP/CF
      DT = TE*VQ
      IF (VQ)  131,133,133
  131 DT = TE*(EXP(VQ) - 1.0)
  133 DT= AMIN1(DT, .5*(FTU-TE))
      DT= AMAX1(DT, .5*(FTL-TE))
      TE = TE + DT
      HENT = ENTR
      IF (FTU-FTL .LT. 2.)  GO TO 21
      IF (ABS(SYSENT-ENTR)/SYSENT .LT. .0001)  GO TO 18
      CALL EQUIL (TE,PR,HE,ENTR,LL)
   15 CF= ((ENTR-HENT)/(CP*ALOG(TE/(TE-DT))))
      WRITE (IO6,236)
      IF (NI.NE.0)WRITE (3,236)
   21 VA = (SUP-SYSENT)/(SUP-SLP)
      VB = (SYSENT-SLP)/(SUP-SLP)
      CP = 0.
      DO 22  L = 1,N
      CP = CP + VNT(L)*Y(L)
      IF (LL .NE. 1)  GO TO 18
   22 VNT(L) = VA*HN(L,1) + VB*HN(L,2)
   18 HE = HE + TE*(SYSENT - ENTR)
      FAC(LL+1) = CF
      RETURN
      END
      SUBROUTINE SETUP(X,XMIN,XMAX, J)
COMMENT.    THIS ROUTINE DETERMINES THE MAXIMUM AND THE MINIMUM CHANGE
C   ALLOWABLE IN REACTION COORDINATE J BEFORE NEGATIVE CONCENTRATIONS AR
C   IT ALSO SETS UP THE FUGACITY COEFFICIENTS FOR REACTION J IN X(J).
      COMMON A(12,12), KR(20), AMAT(10,12), JAT(12), IN, IS,
     1FIE(10,6), IE(10,6), ALP(12), W27, N, DH(10), RHO(10),
     2WATE(10), W1(6), W43, IG, NP, VNT(401), W47, NAME, SER
     3,FLOOR,ITAG(100),WING(10)
      COMMON/CHARA/BLOK,JE,ASPEC,SPECIE
      CHARACTER*30 BLOK(10)
      CHARACTER*2 JE(10,6), ASPEC(12)
      CHARACTER*8 SPECIE(400)
      INTEGER K
      COMMON /IBRIUM/ TL(400,2), TU(400,2), W3(400), VNU(400,12), QA,
     1TAU, H(400), SD(400), Y(400), JC, IR(400,2), DMU(400), VLNK(400),
     2IOJ(12), RA(400,2), RB(400,2), RC(400,2), RD(400,2), RE(400,2),
     3RF(400,2), CH(400,2), JM, W48, CP, FN, C(12,400), LL(400)
      DIMENSION X(30)
      XMAX = .100000000E+16
      XMIN =-.100000000E+16
      DO 9  I = 1,IS
      X(I) = 0.
      IF (VNU(J,I) .EQ. 0.)  GO TO 9
      K = IOJ(I)
      VQ = VNT(K)
      IF (IG .LT. K)  GO TO 6
    4 X(I) = VNU(J,I)
    6 IF(VNU(J,I))  3,9,7
    7 XMAX= AMIN1(XMAX, VQ/VNU(J,I))
      GO TO 9
    3 XMIN= AMAX1(XMIN, VQ/VNU(J,I))
    9 CONTINUE
      RETURN
      END
      SUBROUTINE SLITE(J)
      COMMON /L/ LIT(4)
      IF (J .EQ. 0) GO TO 9
      LIT(J)=1
      RETURN
9     DO 10 I=1,4
10    LIT(I)=0
      RETURN
      END
      SUBROUTINE SLITET(J,K)
      COMMON /L/ LIT(4)
      K=2
      IF (LIT(J) .EQ. 0) GO TO 99
      K=1
      LIT(J)=0
99    RETURN
      END
      SUBROUTINE STOICH(LE)
      COMMON A(12,12), KR(20), AMAT(10,12), JAT(12), IN, IS,
     1FIE(10,6), IE(10,6), ALP(12), W27, N, DH(10), RHO(10),
     2WATE(10), W1(6), W43, IG, NP, VNT(401), W47, NAME, SER
     3,FLOOR,ITAG(100),WING(10)
      COMMON/CHARA/BLOK,JE,ASPEC,SPECIE
      CHARACTER*8 SPECIE(400)
      CHARACTER*30 BLOK(10)
      CHARACTER*2 JE(10,6), ASPEC(12)
COMMENT PROPELLANT STOICHIOMETRY ROUTINE CALLED BY PUTIN.
COMMENT.    ALIASES.  U1= UNBURNED BERYLLIUM, U2 = UNBURNED BORON,
C       U3 = UNBURNED MAGNESIUM, U4 = UNBURNED ALUMINUM,
C    U5 = UNBURNED CARBON,   DON,T USE U6.      THESE INERTS MELT AND
C   EVAPORATE BUT DO NOT REACT.    GAS SPECIES MAY BE ELIMINATED FROM PE
C     TAPE TO PREVENT EVAPORATION.
      CHARACTER*2 SYMB(100)
      COMMON /FJB/ IO6
      DATA SYMB / 'H ','HE','LI','BE','B ','C ','N ','O ',
     X'F ','NE','NA','MG','AL','SI','P ','S ','CL','AR','K ','CA',
     Y'SC','TI','V ','CR','MN','FE','CO','NI','CU','ZN','GA','GE',
     Z'AS','SE','BR','KR','RB','SR','Y ','ZR','NB','MO','TC','RU',
     X'RH','PD','AG','CD','IN','SN','SB','TE','I ','XE','CS','BA',
     Y'LA','CE','PR','ND','PM','SM','EU','GD','TB','DY','HO','ER',
     Z'TM','YB','LU','HF','TA','W ','RE','OS','IR','PT','AU','HG','TL',
     X'PB','BI','PO','AT','RN','FR','RA','AC','TH','PA','U ','NP',
     Y'U6','U5','U1','U2','U3','U4','FM'/
    1 FORMAT ('0WHAT,S ',A2)
    2 FORMAT (/' INGREDIENT CARD ',I2,' GOOFED UP.')
      DO 11  I = 1,100
   11 ITAG(I) = 0
      DO 19  I = 1,IN
      DO 18  J = 1,6
      IF (FIE(I,J))  14,19,12
   12 DO 17  L = 1,100
      IF (JE(I,J) .NE. SYMB(L))  GO TO 17
      ITAG(L) = 1
      IE(I,J) = L
      GO TO 18
   17 CONTINUE
      WRITE ( IO6,1) IE(I,J)
   14 WRITE ( IO6,2) I
      LE = 1
   18 CONTINUE
   19 CONTINUE
      IS = 1
      DO 25  I = 1,100
      IF (ITAG(I))  25,25,20
   20 ASPEC(IS) = SYMB(I)
      JAT(IS) = I
      IS = IS + 1
   25 CONTINUE
      IS = IS - 1
      DO 31  I = 1,IN
      DO 26  J = 1,12
   26 AMAT(I,J) = 0.
      DO 29  K = 1,IS
      DO 28  J = 1,6
      IF (IE(I,J) - JAT(K))  28,27,28
   27 AMAT(I,K) = FIE(I,J)
      GO TO 29
   28 CONTINUE
   29 CONTINUE
   31 CONTINUE
      RETURN
      END
      SUBROUTINE TABLO(II,JJ,KK)
COMMENT.   WHEN THE BASIS IS NO LONGER OPTIMUM, THIS ROUTINE CHANGES IT
C   THE TABLEAU METHOD OF LINEAR PROGRAMMING.
      COMMON A(12,12), KR(20), AMAT(10,12), JAT(12), IN, IS,
     1FIE(10,6), IE(10,6), ALP(12), W27, N, DH(10), RHO(10),
     2WATE(10), W1(6), W43, IG, NP, VNT(401), W47, NAME, SER
     3,FLOOR,ITAG(100),WING(10)
      COMMON/CHARA/BLOK,JE,ASPEC,SPECIE
      CHARACTER*30 BLOK(10)
      CHARACTER*2 JE(10,6), ASPEC(12)
      CHARACTER*8 SPECIE(400)
      COMMON /IBRIUM/ TL(400,2), TU(400,2), W3(400), VNU(400,12), QA,
     1TAU, H(400), SD(400), Y(400), JC, IR(400,2), DMU(400), VLNK(400),
     2IOJ(12), RA(400,2), RB(400,2), RC(400,2), RD(400,2), RE(400,2),
     3RF(400,2), CH(400,2), JM, W48, CP, FN, C(12,400), LL(400)
      COMMON/MOON/TSTEST,TE,JUNK(3)
      COMMON /FJB/ IO6
      DO 19  L = 1,N
      IF (LL(L) .LT. 0)  GO TO 19
      IF (L .EQ. JJ)  GO TO 19
      IF (ABS(VNU(L,KK)) .LT. .0001)  GO TO 19
      VA = -VNU(L,KK)/VNU(JJ,KK)
      DO 15  M = 1,IS
   15 VNU(L,M) = VNU(L,M) + VA*VNU(JJ,M)
      VNU(L,KK) = -VA
      DO 16  M = 1,IS
      IF (ABS(VNU(L,M)) .GT. .00001)  GO TO 16
      VNU(L,M) = 0.
   16 CONTINUE
   19 CONTINUE
      DO 20  M = 1,IS
   20 VNU(JJ,M) = 0.
      VNU(JJ,KK) = 1.
      IOJ(KK) = JJ
      LL(JJ) = 0
      LL(II) = 9
      CALL REACT(TE)
      IF (KR(15) .NE. 1)  GO TO 99
      WRITE (IO6,999)II,JJ,KK,SPECIE(II),SPECIE(JJ)
  999 FORMAT (3I5, 3X, A8, ' REPLACED BY ', A8)
   99 RETURN
      END
      SUBROUTINE THERMO(TE,HE,ENTR)
COMMENT.   COMPUTES SYSTEM ENTHALPY, ENTROPY AND HEAT CAPACITY
      COMMON A(12,12), KR(20), AMAT(10,12), JAT(12), IN, IS,
     1FIE(10,6), IE(10,6), ALP(12), W27, N, DH(10), RHO(10),
     2WATE(10), W1(6), W43, IG, NP, VNT(401), W47, NAME, SER
     3,FLOOR,ITAG(100),WING(10)
      COMMON/CHARA/BLOK,JE,ASPEC,SPECIE
      CHARACTER*30 BLOK(10)
      CHARACTER*2 JE(10,6), ASPEC(12)
      CHARACTER*8 SPECIE(400)
      COMMON /IBRIUM/ TL(400,2), TU(400,2), W3(400), VNU(400,12), QA,
     1TAU, H(400), SD(400), Y(400), JC, IR(400,2), DMU(400), VLNK(400),
     2IOJ(12), RA(400,2), RB(400,2), RC(400,2), RD(400,2), RE(400,2),
     3RF(400,2), CH(400,2), JM, W48, CP, FN, C(12,400), LL(400)
      VH = 0.0
      VS = 0.0
      CP = 0.0
      DO 11  I = 1,N
      CP = CP + VNT(I)*Y(I)
      VH = VH + VNT(I)*H(I)
   11 VS = VS + VNT(I)*SD(I)
      FN = 0.0
      VSM = 0.0
      DO 12  I = 1,IG
      IF(VNT(I) .LE. 0.)GO TO 12
      FN = FN + VNT(I)
      VSM= VSM+ VNT(I)*ALOG(VNT(I))
12    CONTINUE
      VSM = 1.9871*(VSM + FN*VNT(NP))
      HE = VH
      ENTR = VS - VSM
      RETURN
      END
      SUBROUTINE TSALT(TE,PR,HE,ENTR,PUPI,PLOI)
COMMENT.     THIS SUBROUTINE COMPUTES COMPOSITION, PRESSURE AND ENTHALPY
C    GIVEN TEMPERATURE AND ENTROPY.   IT IS CALLED BY TSBAL.
      COMMON A(12,12),KR(20),RJUNK(644),IJUNK(178)
      COMMON/MOON/TSTEST,TEEE,JUNK(3)
      COMMON /FJB/ IO6
      TSTEST = -217.1934
      PLO = PLOI
      PUP = PUPI
      PR=(PUP+PLO)/2.
      DO 22  JI = 1,20
      CALL EQUIL(TE,PR,HE,SE,1)
      IF (KR(13) .NE. 0) WRITE(IO6,9)JI,TE,SE,PUP,PLO
    9 FORMAT (' TSBAL ',I5,F8.1,3F12.3)
      IF (SE .GT. ENTR) PLO=PR
      IF (SE .LT. ENTR) PUP=PR
      PR=(PUP+PLO)/2.
      PR1=PUP-PLO
      PR2=PR1/PLO
      IF (PR2.LT.8.E-5)   GO TO 23
   22 CONTINUE
      WRITE (IO6,1)
    1 FORMAT (' TSALT STOP')
      CALL SLITE (3)
   23 TSTEST = 0.
      RETURN
      END
      SUBROUTINE TSBAL(TE,PR,HE,ENTR,PUPI,PLOI)
COMMENT.    THIS SUBROUTINE COMPUTES COMPOSITION, PRESSURE AND ENTHALPY
C    GIVEN TEMPERATURE AND ENTROPY.   IT IS CALLED BY TSBAL.
      COMMON A(12,12), KR(20), AMAT(10,12), JAT(12), IN, IS,
     1FIE(10,6), IE(10,6), ALP(12), W27, N, DH(10), RHO(10),
     2WATE(10), W1(6), W43, IG, NP, VNT(401), W47, NAME, SER
     3,FLOOR,ITAG(100),WING(10)
      COMMON/CHARA/BLOK,JE,ASPEC,SPECIE
      CHARACTER*30 BLOK(10)
      CHARACTER*2 JE(10,6), ASPEC(12)
      CHARACTER*8 SPECIE(400)
      COMMON /IBRIUM/ TL(400,2), TU(400,2), W3(400), VNU(400,12), QA,
     1TAU, H(400), SD(400), Y(400), JC, IR(400,2), DMU(400), VLNK(400),
     2IOJ(12), RA(400,2), RB(400,2), RC(400,2), RD(400,2), RE(400,2),
     3RF(400,2), CH(400,2), JM, W48, CP, FN, C(12,400),JUNK(400)
      COMMON /FJB/ IO6
      DIMENSION X(12), XM(12)
    8 FORMAT (I5,F10.0, F12.3)
    9 FORMAT (1P 10E13.4)
      KR(18)=1
      PR=.5*(PUPI +PLOI)
 1734 CALL GIBBS(TE)
      CALL FIXBAS
      DO 38  J = 1,IS
      X(J) = 0.
      XM(J) = 0.
      DO 31  I = 1,N
      IF (C(J,I) .EQ. 0.)  GO TO 31
      XM(J) = AMAX1(VNT(I), XM(J))
      X(J) = X(J) + C(J,I)*VNT(I)
   31 CONTINUE
      IF (ABS(ALP(J) - X(J))/XM(J) .LT. .00001)  GO TO 38
      CALL SLITE(1)
      GO TO 39
   38 CONTINUE
   39 CALL DEFIOJ
      CALL REACT (TE)
      DO 211  I = 1,N
  211 W3(I) = 50.0 -VLNK(I)
      CALL RANK(IR,W3,N)
      DO 22  JC = 1,20
      PR=AMAX1(PLOI,PR)
      PR=AMIN1(PUPI,PR)
      CALL TWITCH(PR,0)
      CALL THERMO (TE,HE,STRY)
      VX=1.
      IF (JC .GT. 5) VX=2.
      IF (JC .GT. 10) VX=4.
      PR=PR*EXP(-(ENTR-STRY)/(FN*VX)/1.9871)
      CALL SLITET(4,K000FX)
       GO TO(146,17),K000FX
  146 IF (KR(13)-1)  15,14,15
   14 WRITE (IO6,8)JC,TE,PR
      WRITE (IO6,9)(VNT(I), I = 1,N)
   15 DO 23  ICC = 1,3
      CALL TWITCH(PR,1)
      CALL THERMO (TE,HE,STRY)
      PR=PR*EXP(-(ENTR-STRY)/(FN*VX)/1.9871)
      CALL SLITET(4,K000FX)
       GO TO(23,22),K000FX
   23 CONTINUE
   22 CONTINUE
      KR(18)=0
      CALL TSALT(TE,PR,HE,ENTR,PUPI,PLOI)
   17 VNT(NP) = EXP(VNT(NP))
      RETURN
      END
      FUNCTION TWID (X)
COMMENT.   COMPUTES THE EQUILIBRIUM FUNCTION.
      COMMON A(12,12), KR(20), AMAT(10,12), JAT(12), IN, IS,
     1FIE(10,6), IE(10,6), ALP(12), W27, N, DH(10), RHO(10),
     2WATE(10), W1(6), W43, IG, NP, VNT(401), W47, NAME, SER
     3,FLOOR,ITAG(100),WING(10)
      COMMON/CHARA/BLOK,JE,ASPEC,SPECIE
      CHARACTER*30 BLOK(10)
      CHARACTER*2 JE(10,6), ASPEC(12)
      CHARACTER*8 SPECIE(400)
      COMMON /IBRIUM/ TL(400,2), TU(400,2), W3(400), VNU(400,12), QA,
     1TAU, H(400), SD(400), Y(400), JC, IR(400,2), DMU(400), VLNK(400),
     2IOJ(12), RA(400,2), RB(400,2), RC(400,2), RD(400,2), RE(400,2),
     3RF(400,2), CH(400,2), JM, W48, CP, FN, C(12,400), LL(400)
      DIMENSION X(30)
      VA = 0.0
      TWID = 0.0
      DO 1  I = 1,IS
      IF (X(I) .EQ. 0.)  GO TO 1
   11 VA = VA + X(I)
      K = IOJ(I)
      IF (VNT(K) .LE. 0.) GO TO 1
  111 TWID= TWID+ X(I)*ALOG(VNT(K))
    1 CONTINUE
      TWID = TWID + VA*VNT(NP)
      RETURN
      END
      SUBROUTINE DESIGN (TE,PR,HE,SYSENT,J,I)
      COMMON A(12,12), KR(20), AMAT(10,12), JAT(12), IN, IS,
     1FIE(10,6), IE(10,6), ALP(12), W27, N, DH(10), RHO(10),
     2WATE(10), W1(6), W43, IG, NP, VNT(401), W47, NAME, SER
     3,FLOOR,ITAG(100),WING(10)
      COMMON/CHARA/BLOK,JE,ASPEC,SPECIE
      COMMON /KEN/AF,TCHK,GAMMAC,CSTAR,KENFLG
      COMMON /OPT/Y1(10),NI,XISP,XRHO,XISPEX,IFLGEX,EXPAN,PRESEX
      CHARACTER*30 BLOK(10)
      CHARACTER*2 JE(10,6), ASPEC(12)
      CHARACTER*8 SPECIE(400)
      COMMON /IBRIUM/ TL(400,2), TU(400,2), W3(400), VNU(400,12), QA,
     1TAU, H(400), SD(400), Y(400), JC, IR(400,2), DMU(400), VLNK(400),
     2IOJ(12), RA(400,2), RB(400,2), RC(400,2), RD(400,2), RE(400,2),
     3RF(400,2), CH(400,2), JM, W48, CP, FN, C(12,400),JUNK(400)
      COMMON /SCRATC/PLOT(5,200)
      COMMON /FJB/ IO6
      COMMON /DENEXP/DENEXP
      DIMENSION TEMP(20),PRES(20),HEAT(20),VOLU(20),IPH(20)
      DIMENSION SPI(2),AST(2),PST(2),GAM(2),CF(2),EV(2),CST(2),RISP(2),
     1OEX(2),EL(2),THRT(2),TEX(2),CS(2)
      TEMP(I) = TE
      PRES(I) = PR
      HEAT(I) = HE
      VOLU(I) = FN*.08205*TE/PR
      IPH(I) = IPHASE(J)
      NPNTS = I
      IF (I.EQ. 1)  GO TO 99
      SPI(J+1) = 9.3294*SQRT((HEAT(1)-HEAT(2))/W27)
      TEX(J+1) = TEMP(2)
      AS = VOLU(2)/SQRT(HEAT(1)-HEAT(2))
      CONV = 1./1000./SQRT(8372.*W27)
      NSTART = 2
      IF (J .EQ. 0)  GO TO 21
      DO 20  LIM = 1,8
      DO 19  K = NSTART, NPNTS
      IF (NPNTS .EQ. 2)  GO TO 9
      IF (IPH(K-1) .EQ. IPH(K))  GO TO 19
      IF (ABS(TEMP(K)-TEMP(K-1)) .LT. 2.) GO TO 19
    9 TEMP(K+1) = TEMP(K)
      PRES(K+1) = PRES(K)
      HEAT(K+1) = HEAT(K)
      IPH(K+1) = IPH(K)
      VOLU(K+1) = VOLU(K)
      IPH(K) = IPH(K-1)
      NSTART = K+1
      NPNTS = NPNTS + 1
      TUP = TEMP(K-1)
      TLO = TEMP(K+1)
      PUP = PRES(K-1)
      PLO = PRES(K+1)
      HUP = HEAT(K-1)
      HLO=HEAT(K+1)
      DO 15  L = 1,10
      TEMP(K) = .5*(TUP+TLO)
      TE = TEMP(K)
      IF (TE +1. .LT. TEMP(1))  GO TO 151
      TEMP(K) = TLO
      PRES(K) = PLO
      HEAT(K) = HLO
      GO TO 16
  151 IF (TE -1.  .GT. TEX(2))  GO TO 152
      TEMP(K) =TUP
      PRES(K) =PUP
      HEAT(K) =HUP
      VOLU(K) = FN*.08205*TEMP(K)/PRES(K)
      GO TO 21
  152 TE=TEMP(K)
      CALL TSBAL (TE, PRES(K), HEAT(K), SYSENT,PUP,PLO)
      IVA = IPHASE(J)
      IF (IVA .NE. IPH(K-1))  GO TO 13
      IF (IVA .EQ. IPH(K+1))  GO TO 16
      TUP = TEMP(K)
      PUP = PRES(K)
      HUP = HEAT(K)
      GO TO 15
   13 TLO = TEMP(K)
      PLO = PRES(K)
      HLO = HEAT(K)
      IPH(K) = IVA
   15 CONTINUE
   16 VOLU(K) = FN*.08205*TEMP(K)/PRES(K)
      GO TO 20
   19 CONTINUE
      GO TO 21
   20 CONTINUE
   21 DO 31  L = 2,NPNTS
      CALL ONED(HEAT(1),TEMP(L-1),PRES(L-1),HEAT(L-1),VOLU(L-1),TEMP(L)
     1,PRES(L), HEAT(L), VOLU(L), PST(J+1), ASTAR,    GT, GC, GV, LL)
      IF (PRES(L) .LT. PST(J+1))  GO TO 53
   31 CONTINUE
   53 IF (PST(J+1) .LT. PRES(L-1))  GO TO 32
      PST(J+1) = PRES(L-1)
      ASTAR = VOLU(L-1)/SQRT(HEAT(1) - HEAT(L-1))
   32 OEX(J+1) = AS/ASTAR
      GAM(J+1) = GV
      CONV = 1./1000./SQRT(8368.*W27)
      AST(J+1) = ASTAR*CONV
      CONV1 = 9.806/1000./4184./24.218
      CF(J+1) = CONV1*SPI(J+1)/W1(5)/AST(J+1)
      CS(J+1) = 32.174*SPI(J+1)/CF(J+1)
      EV(J+1) = 32.174*SPI(J+1)
      RISP(J+1) = (W43/.03613)**DENEXP*SPI(J+1)
      EL(J+1) = (W43/.03613)**(.78)   *SPI(J+1)
      AST(J+1) = AST(J+1)*1550./.00220462
      THRT(J+1) = TEMP(L)*(PRES(L)/PST(J+1))**GT
      IF (J .EQ. 0)  GO TO 99
      CONV = CONV/CONV1
      PAST = PST(J+1)
C COMPUTE DESIRED EXPANSION RATIO FOR POP USE
      IF(IFLGEX.NE.1)GOTO 9875
      PLOT1 = EXPAN
      AREA = ASTAR*PLOT1
      PAST=W1(6)*1.5
      DO 61 M = L,NPNTS
      IF (M .GE. NPNTS)  GO TO 62
      IF (AREA .LT. VOLU(M)/SQRT(HEAT(1) -HEAT(M)))  GO TO 62
   61 CALL ONED(HEAT(1),TEMP(M+1),PRES(M+1),HEAT(M+1),VOLU(M+1),TEMP(M)
     1,PRES(M),HEAT(M),VOLU(M),VA,VB,GT,GC,GV,LL)
   62 L = M
      PUP = PAST
      PLO = PAST/3.
      DO 69  M = 1,28
      PLOT2 = .5*(PUP+PLO)
      IF ((PUP-PLOT2)*(PLO-PLOT2))  63,70,70
   63 VOL = VOLU(L)*(PRES(L)/PLOT2)**(1./GV)
      GO TO (64,65), LL
   64 HE = HEAT(L) + GC*(VOL*PLOT2 - PRES(L)*VOLU(L))
      GO TO 66
   65 HE = HEAT(L) + GC*ALOG(PLOT2/PRES(L))
   66 IF (AREA - VOL/SQRT(HEAT(1)-HE))  67,70,68
   67 PLO = PLOT2
      GO TO 69
   68 PUP = PLOT2
   69 CONTINUE
   70 PAST = PLOT2
      PLOT3 = TEMP(L)*(PRES(L)/PLOT2)**GT
      PLOT4 = 9.3294*SQRT((HEAT(1)-HE)/W27)
      PLOT5 = PLOT4 + PLOT2*AREA*CONV
      XISPEX=PLOT5
      PRESEX=PLOT2
      GOTO 9876
 9875 DO 49  K = 1,100
      IF (KR(3) .NE. 0  .AND.  K .EQ. 2) GOTO9876
      PLOT(1,K) = K
      AREA = ASTAR*PLOT(1,K)
      DO 33 M = L,NPNTS
      IF (M .GE. NPNTS)  GO TO 34
      IF (AREA .LT. VOLU(M)/SQRT(HEAT(1) -HEAT(M)))  GO TO 34
   33 CALL ONED(HEAT(1),TEMP(M+1),PRES(M+1),HEAT(M+1),VOLU(M+1),TEMP(M)
     1,PRES(M),HEAT(M),VOLU(M),VA,VB,GT,GC,GV,LL)
   34 L = M
      PUP = PAST
      PLO = PAST/3.
      DO 43  M = 1,28
      PLOT(2,K) = .5*(PUP+PLO)
      IF ((PUP-PLOT(2,K))*(PLO-PLOT(2,K)))  35,44,44
   35 VOL = VOLU(L)*(PRES(L)/PLOT(2,K))**(1./GV)
      GO TO (36,37), LL
   36 HE = HEAT(L) + GC*(VOL*PLOT(2,K) - PRES(L)*VOLU(L))
      GO TO 38
   37 HE = HEAT(L) + GC*ALOG(PLOT(2,K)/PRES(L))
   38 IF (AREA - VOL/SQRT(HEAT(1)-HE))  39,44,40
   39 PLO = PLOT(2,K)
      GO TO 43
   40 PUP = PLOT(2,K)
   43 CONTINUE
   44 PAST = PLOT(2,K)
      PLOT(3,K) = TEMP(L)*(PRES(L)/PLOT(2,K))**GT
      PLOT(4,K) = 9.3294*SQRT((HEAT(1)-HE)/W27)
      PLOT(5,K) = PLOT(4,K) + PLOT(2,K)*AREA*CONV
   49 CONTINUE
 9876 WRITE (IO6,*) "***********************************************************
     .********************************"
      WRITE(IO6,1246)
 1246 FORMAT(/1X,'PERFORMANCE: FROZEN ON FIRST LINE, ',
     .  'SHIFTING ON SECOND LINE')
      WRITE (IO6,1243)
 1243 FORMAT(/' IMPULSE   IS EX      T*      P*      C*    ISP*',
     X  '  OPT-EX  D-ISP      A*M   EX-T')
 1245 FORMAT(F8.1,F8.4,F8.0,F8.2,F8.1,F8.1,F8.2,F7.1,F9.5,F7.0)
 1244 FORMAT(F8.1,F8.4,F8.0,F8.2,F8.1,  8X,F8.2,F7.1,F9.5,F7.0)
      IF(NI.EQ.0)WRITE(IO6,1244)SPI(1),GAM(1),THRT(1),PST(1),CS(1),
     1       OEX(1),RISP(1),AST(1),TEX(1)
      CST(2) = PLOT(5,1)
C ISP STORAGE FOR OPTIMIZATION
      XISP=SPI(2)
      IF(NI.EQ.0)WRITE(IO6,1245)SPI(2),GAM(2),THRT(2),PST(2),CS(2),
     1CST(2),OEX(2),RISP(2),AST(2),TEX(2)
      IF(KR(3) .GT. 0)GO TO 98
      CALL BOOST(W43,SPI(2))
   98 CONTINUE
C CSTAR CALCULATION
      CSTAR=32.174*SPI(1)/CF(1)
C WRITE DATA FOR KEN
      IF(KENFLG.EQ.1)WRITE(2,1247)AF,TCHK,GAMMAC,CSTAR
 1247 FORMAT(4E16.8)
   99 RETURN
      END
      SUBROUTINE DESNOZ
C   NOZZLE HARDWARE DESIGN ROUTINE.
      COMMON A(12,12), KR(20), AMAT(10,12), JAT(12), IN, IS,
     1FIE(10,6), IE(10,6), ALP(12), W27, N, DH(10), RHO(10),
     2WATE(10), W1(6), W43, IG, NP, VNT(401), W47, NAME, SER
     3,FLOOR,ITAG(100),WING(10)
      COMMON/CHARA/BLOK,JE,ASPEC,SPECIE
      CHARACTER*8 SPECIE(400)
      CHARACTER*30 BLOK(10)
      CHARACTER*2 JE(10,6), ASPEC(12)
      COMMON /SCRATC/PLOT(5,200)
      COMMON /FJB/ IO6
   23 FORMAT('1',5A6)
      DO 49 K=1,100
      TVA=PLOT(4,K)+(PLOT(5,K)-PLOT(4,K))*(PLOT(2,K)-1.)/PLOT(2,K)
      IF(K .EQ. 26  .OR.  K .EQ. 66)WRITE(IO6,23)
      IF (K .EQ. 1  .OR.  K .EQ. 26  .OR.  K .EQ. 66)WRITE(IO6,2000)
2000  FORMAT('0',' EXP.','   EXIT','   EXIT','   EXIT',' OPTIMUM'
     &,' OPTIMUM',' VACUUM',' VACUUM',' SEA LV',' SEA LV'/
     $' RATIO','  PRESS','  PRESS','   TEMP',' IMPULSE',' IMPULSE'
     &,' IMPULS',' IMPULS',' IMPULS',' IMPULS'/
     &10X,'ATM','     SI','      K','     SEC','      SI','    SEC'
     &,'     SI','    SEC','     SI')
      VA=PLOT(2,K)*101.3
      VB=PLOT(4,K)*9.80621
      VC=PLOT(5,K)*9.80621
      VD=TVA*9.90621
49    WRITE(IO6,7777)PLOT(1,K),PLOT(2,K),VA,PLOT(3,K),PLOT(4,K),VB,
     &PLOT(5,K),VC,TVA,VD
7777  FORMAT(F6.0,F7.3,F7.1,F7.0,F8.1,F8.0,F7.1,F7.0,F7.1,F7.0)
   99 RETURN
      END
      SUBROUTINE GIBBS(TE)
COMMENT.   COMPUTES INDIVIDUAL ENTHALPIES, ENTROPIES AND GIBBS FREE ENER
      COMMON A(12,12), KR(20), AMAT(10,12), JAT(12), IN, IS,
     1FIE(10,6), IE(10,6), ALP(12), W27, N, DH(10), RHO(10),
     2WATE(10), W1(6), W43, IG, NP, VNT(401), W47, NAME, SER
     3,FLOOR,ITAG(100),WING(10)
      COMMON/CHARA/BLOK,JE,ASPEC,SPECIE
      CHARACTER*30 BLOK(10)
      CHARACTER*2 JE(10,6), ASPEC(12)
      CHARACTER*8 SPECIE(400)
      COMMON /IBRIUM/ TL(400,2), TU(400,2), W3(400), VNU(400,12), QA,
     1TAU, H(400), SD(400), Y(400), JC, IR(400,2), DMU(400), VLNK(400),
     2IOJ(12), RA(400,2), RB(400,2), RC(400,2), RD(400,2), RE(400,2),
     3RF(400,2), CH(400,2), JM, W48, CP, FN, C(12,400), LL(400)
      COMMON /FJB/ IO6
 1    FORMAT(/1X,'T=',F6.0,'  H,S-D,MU-D, 2/LINE')
 2    FORMAT(2(1X,3E12.4,I3))
      THETA=TE/1000.
      DO 18 I=1,N
      TU1=TU(I,1)-10.
      TU2=TU(I,1)+10.
      TEQ=ABS(TU(I,1)-TL(I,2))
      Q=0.
      IF(TE.GE.TL(I,1).AND.TE.LE.TU(I,1)) GO TO 30
      IF(TE.GT.TL(I,2).AND.TE.LE.TU(I,2)) GO TO 31
      Q=1000000000000.
      IF (TE .LE. 298.16) GO TO 30
   31 K=2
      Y2=RA(I,K)+RB(I,K)*THETA+RC(I,K)*THETA**2+RD(I,K)*THETA**3
     1   +RE(I,K)*THETA**(-2)
      H2=(RF(I,K)+RA(I,K)*THETA+.5*RB(I,K)*THETA**2+(1./3.)*RC(I,K)
     1  *THETA**3+.25*RD(I,K)*THETA**4-RE(I,K)*1./THETA)*1000.
      SD2=CH(I,K)+RA(I,K)*ALOG(THETA)+RB(I,K)*THETA+.5*RC(I,K)*
     1   THETA**2+(1./3.)*RD(I,K)*THETA**3-.5*RE(I,K)*THETA**(-2)
      IF(TE.GE.TU1.AND.TE.LE.TU2.AND.TEQ.LE.1.) GO TO 32
      Y(I)=Y2
      H(I)=H2
      SD(I)=SD2
      GO TO 20
   32 K = 1
      Y1=RA(I,K)+RB(I,K)*THETA+RC(I,K)*THETA**2+RD(I,K)*THETA**3
     1   +RE(I,K)*THETA**(-2)
      H1=(RF(I,K)+RA(I,K)*THETA+.5*RB(I,K)*THETA**2+(1./3.)*RC(I,K)
     1  *THETA**3+.25*RD(I,K)*THETA**4-RE(I,K)*1./THETA)*1000.
      SD1=CH(I,K)+RA(I,K)*ALOG(THETA)+RB(I,K)*THETA+.5*RC(I,K)*
     1   THETA**2+(1./3.)*RD(I,K)*THETA**3-.5*RE(I,K)*THETA**(-2)
      GO TO 33
   30 K = 1
      Y1=RA(I,K)+RB(I,K)*THETA+RC(I,K)*THETA**2+RD(I,K)*THETA**3
     1   +RE(I,K)*THETA**(-2)
      H1=(RF(I,K)+RA(I,K)*THETA+.5*RB(I,K)*THETA**2+(1./3.)*RC(I,K)
     1  *THETA**3+.25*RD(I,K)*THETA**4-RE(I,K)*1./THETA)*1000.
      SD1=CH(I,K)+RA(I,K)*ALOG(THETA)+RB(I,K)*THETA+.5*RC(I,K)*
     1   THETA**2+(1./3.)*RD(I,K)*THETA**3-.5*RE(I,K)*THETA**(-2)
      IF(TE.GE.TU1.AND.TE.LE.TU2.AND.TEQ.LE.1.) GO TO 34
      Y(I)=Y1
      H(I)=H1
      SD(I)=SD1
      GO TO 20
   34 Y2=RA(I,K)+RB(I,K)*THETA+RC(I,K)*THETA**2+RD(I,K)*THETA**3
     1   +RE(I,K)*THETA**(-2)
      H2=(RF(I,K)+RA(I,K)*THETA+.5*RB(I,K)*THETA**2+(1./3.)*RC(I,K)
     1  *THETA**3+.25*RD(I,K)*THETA**4-RE(I,K)*1./THETA)*1000.
      SD2=CH(I,K)+RA(I,K)*ALOG(THETA)+RB(I,K)*THETA+.5*RC(I,K)*
     1   THETA**2+(1./3.)*RD(I,K)*THETA**3-.5*RE(I,K)*THETA**(-2)
   33 F2=-(TU(I,1)-10.-TE)/20.
      F1=1.-F2
      Y(I)=F1*Y1+F2*Y2
      H(I)=F1*H1+F2*H2
      SD(I)=F1*SD1+F2*SD2
   20 IF (Y(I) .GE. 0.)  GO TO 1888
      Q = 1000000000000.
 1888 IF (W1(3) .LT. 0.)  Q = 0.
      IF (TE .LT. 298.16) H(I)=H(I) -(298.16-TE)*Y(I)
      IF (TE .LT. 298.16) SD(I)=SD(I)- Y(I)*ALOG(298.16/TE)
  18  DMU(I) = H(I) - TE*SD(I) + Q
      IF (KR(11) - 1)  21,19,21
   19 WRITE (IO6,1)TE
      WRITE (IO6,2)(H(I),SD(I),DMU(I),I, I=1,N)
   21 RETURN
      END
      SUBROUTINE SEARCH(LE)
C . . . . TAPE SEARCH ROUTINE FOR THERMO DATA.
      COMMON A(12,12), KR(20), AMAT(10,12), JAT(12), IN, IS,
     1FIE(10,6), IE(10,6), ALP(12), W27, N, DH(10), RHO(10),
     2WATE(10), W1(6), W43, IG, NP, VNT(401), W47, NAME, SER
     3,FLOOR,ITAG(100),WING(10)
      COMMON/CHARA/BLOK,JE,ASPEC,SPECIE
      COMMON /ALICE/ BINK(400,2)
      CHARACTER*30 BLOK(10)
      CHARACTER*2 JE(10,6), ASPEC(12)
      CHARACTER*8 SPECIE(400)
      COMMON /IBRIUM/ TL(400,2), TU(400,2), W3(400), VNU(400,12), QA,
     1TAU, H(400), SD(400), Y(400), JC, IR(400,2), DMU(400), VLNK(400),
     2IOJ(12), RA(400,2), RB(400,2), RC(400,2), RD(400,2), RE(400,2),
     3RF(400,2), CH(400,2), JM, W48, CP, FN, C(12,400), LL(400)
      COMMON /FJB/ IO6
      INTEGER S
      DIMENSION TAPAD(37)
    4 FORMAT ('0 HARK. NO COMBUSTION SPECIES FOR ',A2,' REVISE JANNAF
     ..DAT')
      IF (KR(2) .NE. 1)  GO TO 10
      IS = IS + 1
      JAT(IS) = 0
      ALP(IS) = 0.
   10 NP = 1
      READ (12,REC=1) NUMSPE,TAPAD
      DO 99  LIM = 2,NUMSPE
      NREC=LIM
      DO 9  I = 1,IS
    9 C(I,NP) = 0.
      READ(12,REC=NREC) KHASE,SPECIE(NP),S,(IE(J,1),IE(J,2),J=1,7),
     X  (RA(NP,K),RB(NP,K),RC(NP,K),RD(NP,K),RE(NP,K),RF(NP,K),
     Y  CH(NP,K),BINK(NP,K),TL(NP,K),TU(NP,K),K=1,2)
C . . . . SEE IF SPECIES BELONGS TO ELEMENT GROUP.
      IF (IE(1,1) .EQ. 0)  GO TO 99
      DO 18  I = 1,7
      IF (IE(I,1))16,19,16
   16 DO 17  J = 1,IS
      IF (IE(I,2) .NE. JAT(J))  GO TO 17
      C(J,NP) = IE(I,1)
      GO TO 18
   17 CONTINUE
      GO TO 99
   18 CONTINUE
   19 CONTINUE
      NP = NP +1
      IF (KHASE .NE. 1)  GO TO 98
      IG = NP -1
   98 IF (NP .LT. 400)   GO TO 99
      WRITE (IO6,5)
    5 FORMAT (51H0NO. OF COMBUS. SPECIES EXCEEDS PROG. LIMIT OF 400  )
99    CONTINUE
  100 N = NP -1
      DO 50  I = 1,N
      W3(I) = 50.
      DO 50  J = 1,IS
   50 W3(I) = W3(I) - SQRT(ABS(C(J,I)))
      DO 51  J = 1,IS
      H(J) = 0.
      DO 51  I = 1,N
   51 H(J) = H(J) + ABS(C(J,I))
      DO 53  J = 1,IS
      IF (H(J))  52,52,53
   52 WRITE ( IO6,4) ASPEC(J)
      LE = 1
   53 CONTINUE
      IF (KR(8) .NE. 0) WRITE (IO6,1124)(SPECIE(I),I=1,N)
 1124 FORMAT ('0COMPLETE SPECIES LIST FOLLOWS'/(1X,8A8))
      RETURN
      END
      SUBROUTINE OUT (PR,TE,HE,ENTR,NS)
COMMENT.   COMPOSITION AND STATE VARIABLE OUTPUT ROUTINE.
      COMMON A(12,12), KR(20), AMAT(10,12), JAT(12), IN, IS,
     1FIE(10,6), IE(10,6), ALP(12), W27, N, DH(10), RHO(10),
     2WATE(10), W1(6), W43, IG, NP, VNT(401), W47, NAME, SER
     3,FLOOR,ITAG(100),WING(10)
      COMMON/CHARA/BLOK,JE,ASPEC,SPECIE
      COMMON /ALICE/ BINK(400,2)
      COMMON /KEN/AF,TCHK,GAMMAC,CSTAR,KENFLG
      COMMON /TEMP/TCHAM
      CHARACTER*8 WATER,HION,OHION
      CHARACTER*30 BLOK(10)
      CHARACTER*2 JE(10,6), ASPEC(12)
      CHARACTER*8 SPECIE(400)
      COMMON /IBRIUM/ TL(400,2), TU(400,2), W3(400), VNU(400,12), QA,
     1TAU, H(400), SD(400), Y(400), JC, IR(400,2), DMU(400), VLNK(400),
     2IOJ(12), RA(400,2), RB(400,2), RC(400,2), RD(400,2), RE(400,2),
     3RF(400,2), CH(400,2), JM, W48, CP, FN, C(12,400), LL(400)
      DIMENSION VOT(4)
      DIMENSION XMWT(400)
      CHARACTER*8 SPOT(4)
      COMMON /FJB/ IO6
      COMMON /LLIST/ ATWT(100)
      DATA WATER/'H2O     '/,HION/'H       '/,OHION/'HO      '/
  102 FORMAT (/'  T(K)  T(F)  P(ATM)   P(PSI) ENTHALPY  ENTROPY   CP/CV
     X    GAS   RT/V')
  104 FORMAT (2F6.0,F8.2,F9.2,F9.2,F9.2,F8.4,F7.3,F9.3)
   21 FORMAT (1H )
      GAMMA = CP/(CP - 1.9871*FN)
      TF = 1.8*TE - 459.4
      VH = HE/1000.0
      PF = PR*14.70069
      WRITE (IO6,*) "***********************************************************
     .********************************"
      WRITE (IO6,*) " "
      IF(PR.EQ.W1(5))WRITE(IO6,*) "CHAMBER RESULTS:"
      IF(PR.EQ.W1(6))WRITE(IO6,*) "EXHAUST RESULTS:"
      WRITE (IO6,102)
      WRITE(IO6,104) TE,TF,PR,PF,VH,ENTR,GAMMA,FN,VNT(NP)
      WRITE (IO6,21)
C FROZEN CONDITIONS SPEED OF SOUND CALCULATIONS
      AGAS=SQRT(1545.*FN/W27*32.174*GAMMA*(TF+459.67))
      CPGAS=0.0
      FNG=0.0
      DO 500 I=1,IG
      FNG=FNG+VNT(I)
  500 CPGAS=CPGAS+VNT(I)*Y(I)
      CPPART=0.0
      IF(IG.GE.N)GOTO 520
      DO 510 I=IG+1,N
  510 CPPART=CPPART+VNT(I)*Y(I)
  520 WTGAS=0.0
      DO 540 I=1,IG
      XMWT(I)=0.0
      DO 530 J=1,IS
      JJ=JAT(J)
      IF(JJ.EQ.0)GOTO 530
      XMWT(I)=XMWT(I)+C(J,I)*ATWT(JJ)
  530 CONTINUE
  540 WTGAS=WTGAS+VNT(I)*XMWT(I)
      WTPART=0.0
      IF(IG.GE.N)GOTO 570
      FNC=0.0
      DO 560 I=IG+1,N
      XMWT(I)=0.0
      DO 550 J=1,IS
      JJ=JAT(J)
      IF(JJ.EQ.0)GOTO 550
      XMWT(I)=XMWT(I)+C(J,I)*ATWT(JJ)
  550 CONTINUE
      FNC=FNC+VNT(I)
  560 WTPART=WTPART+VNT(I)*XMWT(I)
  570 CM=WTPART/WTGAS
      APART=AGAS/SQRT(ABS(1.0+CM*(1.0+(GAMMA-1.0)*CPPART/CPGAS)))
C     WRITE(IO6,106)APART,AGAS
  106 FORMAT(1X,'DAMPED AND UNDAMPED SPEED OF SOUND=',F9.3,
     .' AND',F9.3,' FT/SEC'/)
      CPP1=CPGAS/FNG
      CPP2=(CPGAS+CPPART)/(FNG+FNC)
      WRITE(IO6,9917) CPP1,CPP2,FNG,FNC
 9917 FORMAT(1X,'SPECIFIC HEAT (MOLAR) OF GAS AND TOTAL=',F9.3,F9.3/
     1 1X,'NUMBER MOLS GAS AND CONDENSED=',F9.4,F9.4/)
C END SPEED OF SOUND CALCULATIONS
      CALL RANK(IR, VNT, N)
      J = 1
      DO 904 II= 1,N
      I = IR(II,1)
      IF (VNT(I) .LE. FLOOR)  GO TO 904
      SPOT(J) = SPECIE(I)
      VOT(J) = VNT(I)
      J = J + 1
      IF (J .LT. 5)  GO TO 904
      IF (VOT(1) .GT. .009995)  WRITE (IO6,44)(VOT(K),SPOT(K),K=1,4)
      IF(VOT(1) .LE. .009995)  WRITE(IO6,45)(VOT(K),SPOT(K),K=1,4)
   44 FORMAT (4(1X,F9.5,1X,A8))
   45 FORMAT(4(1X,1PE9.2,1X,A8))
      J = 1
  904 CONTINUE
      J = J -1
      IF (J .NE. 0) WRITE (IO6,45)(VOT(K),SPOT(K),K=1,J)
      IF(PR.EQ.W1(5))GAMMAC=GAMMA
      IF(PR.EQ.W1(5))TCHK=TE
      IF(PR.EQ.W1(5))TCHAM=TE
      WEIGHT=0.0
      DO 905 III=1,N
      WEIGHT=WEIGHT+VNT(III)
  905 CONTINUE
      WEIGHT=W27/WEIGHT
      WRITE(IO6,46)WEIGHT
   46 FORMAT(/1X,'THE MOLECULAR WEIGHT OF THE MIXTURE IS',F9.3)
      SUMC=0.0
      K=1
      CC1=0.0
      CC2=0.0
      CC3=0.0
      DO 18 I=1,N
      IF(VNT(I).LE.1.0E-05) GO TO 18
      IF(SPECIE(I).EQ.WATER) CC1=VNT(I)
      IF(SPECIE(I).EQ.HION) CC2=VNT(I)
      IF(SPECIE(I).EQ.OHION) CC3=VNT(I)
      CON5=BINK(I,K)*VNT(I)*1000.
      SUMC=SUMC+CON5
  18  CONTINUE
      HTCON1=(HE-SUMC)/W27
      HTCON2=HTCON1+CC1*105.89
      CC1=AMIN1(CC2,CC3)
      HTCON2=HTCON2+CC1*1299.0
C     WRITE(IO6,6963) HTCON2
C     WRITE(IO6,6963) HTCON2,HTCON1
 6963 FORMAT(/1X,'TOTAL HEAT CONTENT (298 REF)   =',F8.3,' CAL/GM')
C    1 1X,'SENSIBLE HEAT CONTENT (298 REF)=',F8.3,' CAL/GM')
      RETURN
      END
      SUBROUTINE PUT IN (LE)
COMMENT     INPUT ROUTINE CALLED BY MAIN PROGRAM.
C  NOTE DELETABLE ROUTINES SETCLK AND LKCLKS THAT MEASURE CPU TIME
      COMMON A(12,12), KR(20), AMAT(10,12), JAT(12), IN, IS,
     1FIE(10,6), IE(10,6), ALP(12), W27, N, DH(10), RHO(10),
     2WATE(10), W1(6), W43, IG, NP, VNT(401), W47, NAME, SER
     3,FLOOR,ITAG(100),WING(10)
      DIMENSION KTAG(100)
      COMMON/CHARA/BLOK,JE,ASPEC,SPECIE
      CHARACTER*17 USER
      CHARACTER*8 SPECIE(400)
      CHARACTER*30 BLOK(10),FILNAM,DRA,NLQ
      CHARACTER*2 JE(10,6), ASPEC(12)
      CHARACTER*1 DEVIC
      COMMON/MOON/TSTEST,TE,IRUN,IOUNIT,IEND
      DIMENSION JIE(10,6),SWING(10)
      COMMON /LLIST/ ATWT(100)
      COMMON /DENEXP/DENEXP
      COMMON /FJB/ IO6
      DATA NLQ /'NLQ                           '/
      DATA DRA /'DRAFT                         '/
      IO=6
      LE = 0
      IDUMB=0
      IF (IRUN)  230,10,230
   10 IDUMB=1
      READ (5,101) FILNAM
101   FORMAT (A30)
      DEVIC=' '
      IF (FILNAM.EQ.NLQ) DEVIC='Q'
      IF (FILNAM.EQ.DRA) DEVIC='N'
      CALL OPENOT (DEVIC,FILNAM)
   20 FORMAT(I2)
      READ(5,70)USER
   70 FORMAT(A17)
      READ(5,90)NIC,NIU,IRUN
      LCASE=IRUN
      ICASE=0
   90 FORMAT(3I5)
      IF(IRUN.EQ.0)IRUN=1
      IEND=IRUN
      IN=NIC+NIU
      READ(5,96)DENEXP
   96 FORMAT(5F12.0)
      IF(DENEXP.EQ.0.0)DENEXP=1.0
      READ(5,96) PROTEM
      IF(PROTEM.EQ.0.0) PROTEM=298.0
      READ(5,96) CPA,CPB,CPC
      IF(CPA.LE.0.0) CPA=0.3
      KR(7)=0
      READ(5,110)KR(1),KR(2),KR(3),KR(4),KR(5),KR(8),IDEBUG,KR(7)
  110 FORMAT(11I1)
      KR(3)=KR(3)+1
      IF(KR(3).EQ.2)KR(3)=0
      KR(4)=KR(4)+1
      IF(KR(4).EQ.2)KR(4)=0
      KR(6)=0
      KR(9)=0
      KR(10)=0
      IF(IDEBUG.EQ.0)GOTO 112
      READ(5,110)(KR(I),I=11,15)
  112 CONTINUE
      DO 113 I=1,12
  113 JAT(I)=0
      IF(NIC.EQ.0)GOTO 180
      READ(5,130)(ITAG(I),I=1,NIC)
      DO 121 I=1,NIC
121   KTAG(I)=ITAG(I)
  130 FORMAT(10I5)
      KP=1
      DO 170 I=1,NIC
      K=ITAG(I)
      READ (11,9,REC=K)
     +  BLOK(I),(JIE(I,L),JE(I,L),L=1,6),DH(I),RHO(I)
      WRITE (1,7) BLOK(I),(JIE(I,L),JE(I,L),L=1,6),DH(I),RHO(I)
  150 FORMAT(A30,6(I3,A2),F5.0,F6.0)
7     FORMAT (1X,A30,6(I3,A2),F6.0,F6.5)
      KP=KP+1
9     FORMAT (9X,A30,6(I3,A2),F5.0,F6.0)
      DO 170 J=1,6
  170 FIE(I,J)=JIE(I,J)
  180 CONTINUE
      IF(NIU.EQ.0)GOTO 210
      DO 200 I=NIC+1,IN
      READ(5,150)BLOK(I),(JIE(I,L),JE(I,L),L=1,6),DH(I),RHO(I)
      DO 200 J=1,6
  200 FIE(I,J)=JIE(I,J)
  210 CONTINUE
      DO 211 I=1,IN
  211 IF(RHO(I).LE..00001)RHO(I)=.00001
      CALL STOICH(LE)
      DO 220 I=1,IN
      WATE(I)=0
      DO 220 J=1,IS
      K=JAT(J)
  220 WATE(I)=WATE(I)+AMAT(I,J)*ATWT(K)
      CALL SEARCH(LE)
  230 CONTINUE
      READ(5,250)W1(5),W1(6),(WING(I),I=1,10)
  250 FORMAT(12E12.6)
      IF (W1(5) .EQ. 0.)  GO TO 112
      IF(W1(5).EQ.-1.0) STOP
      IF (KR(2) .NE. 1)  GO TO 260
      IS = IS -1
  260 IRUN = IRUN - 1
      KR(19) = 1
      IF (WING(1) .EQ. 0.)  GO TO 310
      KR(19) = 0
      DO 270  J = 1,IS
      ALP(J) = 0.
      DO 270  I = 1,IN
  270 ALP(J) = ALP(J) + AMAT(I,J)*WING(I)/WATE(I)
      W27 = 0.
      W1(4) = 100.0*(CPA*(PROTEM-298.0)+CPB/2.0*(PROTEM**2-298.0**2)+
     1 CPC/3.0*(PROTEM**3-298.0**3))
      W43 = 0.
      VA = 1.
      DO 300  I = 1,IN
      SWING(I) = WING(I)
      W1(4) = W1(4) + DH(I)*WING(I)
      W27 = W27 + WING(I)
      IF (RHO(I))  290,290,280
  280 W43 = W43 + WING(I)/RHO(I)
      GO TO 300
  290 VA = 0.
  300 CONTINUE
      W43 = VA/W43  *W27
  310 IF (KR(4) .NE. 1)  GO TO 320
      IF (KR(17) .EQ. 1)  GO TO 320
      W1(5) = W1(5)/14.70069
      IF (KR(7) .EQ. 1)  GO TO 320
      W1(6) = W1(6)/14.70069
320   ICASE=ICASE+1
      WRITE (1,321) ICASE,LCASE
321   FORMAT (' CASE',I3,' OF',I3,'   ',A14)
      WRITE (IO,330) USER,ICASE,LCASE
  330 FORMAT('1',1X,/," HAYNIE RESEARCH & DEVELOPMENT",/
     1 " PROPELLANT EVALUATION PROGRAM FOR Z/OS",/
     2 " VERSION 1.1",/
     4 " ",/," ",A17,
     1  '  CASE',I3,' OF',I3,'     ',A11,' AT ',A14/)
      WRITE (IO,331)
331   FORMAT ('   CODE ',34X,'WEIGHT    D-H  DENS      COMPOSITION')
      DO 360  I = 1,IN
      DO 340 L=1,6
      IF(JIE(I,L) .EQ. 0) GO TO 350
  340 CONTINUE
  350 L=L-1
      IDH=DH(I)
      XIDR=RHO(I)
      IF (IN.LE.NIC) WRITE(IO,370)
     1  KTAG(I),BLOK(I),SWING(I),IDH,XIDR,(JIE(I,J),JE(I,J),J=1,L)
360   IF (IN.GT.NIC) WRITE(IO,371)
     1          BLOK(I),SWING(I),IDH,XIDR,(JIE(I,J),JE(I,J),J=1,L)
  370 FORMAT(1X,I6,' ',A30,F10.3, I7,1X,F8.5,2X,6(I3,A2))
  371 FORMAT('   USER ',A30,F10.3, I7,1X,F8.5,2X,6(I3,A2))
  380 FORMAT(/1X,'INGREDIENT WEIGHTS (IN ORDER) AND TOTAL WEIGHT
     .(LAST ITEM IN LIST)'//(6(1X,F10.4)))
      W43M=W43*27.6799
      WRITE(IO,390)W43,W43M,W27
  390 FORMAT(/1X,'THE PROPELLANT DENSITY IS',F8.5,' LB/CU-IN OR',
     .F8.4,' GM/CC'/' THE TOTAL PROPELLANT WEIGHT IS',F10.4,' GRAMS')
      WRITE(IO,400)
  400 FORMAT(/1X,'NUMBER OF GRAM ATOMS OF EACH ELEMENT PRESENT ',
     1 'IN INGREDIENTS')
      WRITE (IO,410)(ALP(I),ASPEC(I),I=1,IS)
  410 FORMAT (/4(1X,F11.6,1X,A2))
      IF (KR(2) .NE. 1)  GO TO 420
      IS = IS + 1
  420 IF (LE .NE. 1)  GO TO 440
      IF (IRUN .EQ. 0)  GO TO 440
      DO 430  I = 1,IRUN
  430 READ (5,20)
      IRUN = 0
  440 IEND=IEND-1
      RETURN
      END
      SUBROUTINE OPENFL
      COMMON /FJB/ IO6
      COMMON /FI/ SYS,PEPFIL,JANFIL,OUTFIL
      CHARACTER*2 SYS,JUNK
      CHARACTER*1 KEYINP
      CHARACTER*40 PEPFIL,JANFIL,OUTFIL,JUNKFL
      CHARACTER*40 PROFL1,PROFL2
      IO6=6
C  PEPCODED.DAF:   CONTAINS CODED INPUT DATA
      PROFL1=JANFIL
      PROFL2=PEPFIL
      OPEN(11,FILE='PROPEL',FORM='FORMATTED',ACCESS='DIRECT',RECL=80)
      OPEN(12,FILE='THERMO',FORM='UNFORMATTED',ACCESS='DIRECT',RECL=152)
      OPEN (1,FILE='CON')
      CLOSE (5)
      OPEN (5,FILE='INPUT')
      WRITE (6,1)
      RETURN
2     FORMAT (A1)
1     FORMAT (' PROPELLANT EVALUATION PROGRAM FOR Z/OS'/,
     + ' COPYRIGHT (C) 2017  HAYNIE RESEARCH & DEVELOPMENT'//
     + ' UPDATED FOR Z/OS FROM ORIGINAL VERSION OF NEWPEP'/
     + ' PREVIOUS VER UPDATED BY MARTIN MARIETTA ON 5/89'/
     + ' HAYNIE RESEARCH AND DEVELOPMENT DOES NOT WARRANT OR'/
     + ' SUPPORT THIS PROGRAM IN ANY WAY'//
     + ' WRITTEN IN IBM VS FORTRAN VERSION 2 RELEASE 6')
      END
      SUBROUTINE TWITCH(PR,JQ)
COMMENT.   THIS IS THE ROUTINE WHICH CONVERGES ON CHEMICAL COMPOSITION.
CALLED BY EQUIL.
      COMMON A(12,12), KR(20), AMAT(10,12), JAT(12), IN, IS,
     1FIE(10,6), IE(10,6), ALP(12), W27, N, DH(10), RHO(10),
     2WATE(10), W1(6), W43, IG, NP, VNT(401), W47, NAME, SER
     3,FLOOR,ITAG(100),WING(10)
      COMMON/CHARA/BLOK,JE,ASPEC,SPECIE
      CHARACTER*30 BLOK(10)
      CHARACTER*2 JE(10,6), ASPEC(12)
      CHARACTER*8 SPECIE(400)
      COMMON /IBRIUM/ TL(400,2), TU(400,2), W3(400), VNU(400,12), QA,
     1TAU, H(400), SD(400), Y(400), JC, IR(400,2), DMU(400), VLNK(400),
     2IOJ(12), RA(400,2), RB(400,2), RC(400,2), RD(400,2), RE(400,2),
     3RF(400,2), CH(400,2), JM, W48, CP, FN, C(12,400), LL(400)
      COMMON /FJB/ IO6
      DIMENSION X(30)
      REAL*8 DVAMVN
      VQQ = JC -1
      VQQ = .5 - VQQ/20.
      VQQ = AMAX1(.05, VQQ)
      VC = 0.0
      IF  (KR(17) - 1)   401,402,401
  401 DO 200  I = 1,IG
  200 VC = VC + VNT(I)
      VNT(NP) = ALOG(PR/VC)
  402 DO 99  J = 1,N
      IF (LL(J) .LE. 0)  GO TO 99
      IF (JQ .NE. 0  .AND.  LL(J) .NE. 9)  GO TO 99
      KICK = 0
      VQ = VQQ
    7 CALL SETUP (X, XMIN, XMAX, J)
      IF (VNT(J) .GT. 0.)  GO TO 22
      DX = - 1.001*VNT(J) + FLOOR
      GO TO 97
   22 CONTINUE
      VA = VLNK(J) - TWID (X)
      VB = 0.0
      LL(J) = 1
      IF (J.LE.IG)  GO TO 4
COMMENT      MAJOR SPECIES TOLERANCE
    3 IF (ABS(VA).LT. 0.00008)  GO TO 99
   31 IF ( (VNT(J).GT. W27*1.E-7) .OR. (VA.LT. 0.) )  GO TO 6
      IF (VNT(J) .EQ. FLOOR)  GO TO 99
      DX = -VNT(J) + FLOOR
      GO TO 97
    4 IF (VNT(J) .EQ.0.)  GO TO 44
      IF(VA+VNT(NP) .LT. +5.)GO TO 66
      DVAMVN=-DBLE(VA)-DBLE(VNT(NP))
      IF (DVAMVN.LT.-100.) DVAMVN=-100.0
      V = DEXP(DVAMVN)
      XMMM = AMIN1(-XMIN, XMAX)
      IF (VNT(J)/XMMM .LT. .01) XMAX=.011*XMMM
      IF ((V+VNT(J))/XMMM .GT. .01)  GO TO 66
      GO TO 45
   44 V = FLOOR
      GO TO 5
   45 V= AMAX1(V,FLOOR)
    5 VTEQ = ABS(1. - VNT(J)/V)
COMMENT MINOR SPECIES TOLERANCE
      IF (VTEQ .LT. .0008)  GO TO 99
   55 DX = V - VNT(J)
      LL(J) = 8
      VNT(J) = V
      GO TO 82
   66 VA= VA+ ALOG(VNT(J)) + VNT(NP)
      IF (ABS(VA) - .00008)  99,99,67
   67 VB = 1.0/VNT(J)
    6 DO  69  I = 1,IS
      IF (X(I))  68,69,68
   68 K = IOJ(I)
      VB = VB + X(I)*X(I)/VNT(K)
   69 CONTINUE
      VF=0.
      IF (KR(18) .EQ. 0)  GO TO 801
      M=0
      IF (J .LE. IG) M=+1
      VS=SD(J)
      DO 800  I=1,IS
      K=IOJ(I)
      IF (K .LE. IG)  M=M -VNU(J,I)
  800 VS=VS-VNU(J,I)*SD(K)
      VF=AMAX1(0., M/FN/1.9871 *VS)
      IF(VF .GT. .5*VB)  VFF=1.5
      IF (VF .GT. VB) VFF=3.
      IF (VF .GT. 1.5*VB) VFF=5.
      VF=VFF*VF
      IF (KR(12) .NE. 0) WRITE (IO6,802) J,M,VF,VB,PR,VA
  802 FORMAT (2I6, 1P 5E13.3)
  801 IF (VB.NE. 0.)  GO TO 72
   70 VB = .0000001
      VQ = .999999
   72 DX =-VA/(VB+VF)
      DX= AMAX1(DX, -VQ*VNT(J))
      LL(J) = 9
   97 DX= AMAX1(DX, VQ*XMIN)
      DX= AMIN1(DX, VQ*XMAX)
      IF (ABS(DX) .LT. .0001*VNT(J))  GO TO 81
 3465 FORMAT (I5,1P 13E10.2)
   80 IF (VNT(J)+DX .GT. FLOOR) CALL SLITE (4)
   81 VNT(J) = VNT(J) + DX
   82 VC = .99*VNT(J)
      DO 98  I = 1,IS
      IF (VNU(J,I).EQ. 0.)  GO TO 98
  975 K = IOJ(I)
      VNT(K) = VNT(K) - VNU(J,I)*DX
      IF (VNT(K) .GE. VC) GO TO 98
      IF(KICK .EQ. 1  .AND.  VNT(K) .GT. VD) GO TO 98
      VD=VNT(K)
      KICK = 1
      JJ = J
      II = K
      KK = I
   98 CONTINUE
      IF (KICK .NE. 1)  GO TO 99
      CALL TABLO(II,JJ,KK)
   99 CONTINUE
  100 IF (KR(15).NE.1)  GO TO 107
  999 WRITE (IO6,88)(LL(JJ), JJ = 1,N)
   88 FORMAT ('0',80I1)
  107 CONTINUE
      RETURN
      END
      SUBROUTINE OPENOT (DEVIC,OFILE)
      CHARACTER*1 DEVIC,ESC,LF,CR,LM,LMN,C12,DR,LQ,RS,LS,LS25,DRLQ,PL,
     1  PLN,PF
      CHARACTER*30 OFILE
      ESC=CHAR(27)
      PF=CHAR(12)
      PL='C'
      PLN=CHAR(11)
      LF=CHAR(10)
      LS=CHAR(51)
      LS25=CHAR(25)
      CR=CHAR(13)
      LM=CHAR(108)
      LMN=CHAR(5)
      C12=CHAR(77)
      RS=CHAR(64)
      DRLQ=CHAR(120)
      DR=CHAR(0)
      LQ=CHAR(1)
C----------------------------------------------------------------------
C OPEN MAIN OUTPUT FILE OR PRINTER
C----------------------------------------------------------------------
      IF (DEVIC.EQ.'Q'.OR.DEVIC.EQ.'N') GO TO 10
      OPEN (6,FILE='REPORT')
      GO TO 20
10    OPEN (6,FILE='LPT1')
      IF (DEVIC.EQ.'N') WRITE (6,1) PF,ESC,RS,CR,ESC,LM,LMN,ESC,C12,
     1  ESC,DRLQ,DR,ESC,PL,DR,PLN,ESC,LS,LS25
      IF (DEVIC.EQ.'Q') WRITE (6,1) PF,ESC,RS,CR,ESC,LM,LMN,ESC,C12,
     1  ESC,DRLQ,LQ,ESC,PL,DR,PLN,ESC,LS,LS25
      IF (DEVIC.EQ.'P') WRITE (6,1) PF
1     FORMAT ('+',40A1)
20    CONTINUE
      RETURN
      END
